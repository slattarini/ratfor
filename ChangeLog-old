2009-11-14  Stefano Lattarini  <stefano.lattarini@gmail.com>

	new test `illegal-case-default.test'

	A: tests/illegal-case-default.test:
	  * new test: check that illegal occurrences of the `default' and
	    `case' keywords are diagnosed correctly

	M: tests/Makefile.am:
	  * $(ALL_TESTS) updated acordingly

2009-11-14  Stefano Lattarini  <stefano.lattarini@gmail.com>

	testlib.sh: moved to SteLib

	M: tests/TestsAux/testlib.sh:
	  * This file is now general-purpose enough that I moved it (almost
	    verbatim, with minor bugfixes) to SteLib, and re-imported it from
	    there.  So it's now just a readonly copy: changes should go in the
	    master copy on SteLib.

2009-11-13  Stefano Lattarini  <stefano.lattarini@gmail.com>

	do not reexecute test scripts with $CONFIG_SHELL

	M: tests/TestsAux/testlib.sh:
	  * do not try to re-excute the test scripts with $SHELL (expected to
	    be given by configure-time $CONFIG_SHELL)

	M: tests/TestsEnvironment.am:
	  * drop the machinery avoiding re-execution with $CONFIG_SHELL of test
	    scripts by testlib.sh: do not add to `AM_TEST_LOG_FLAGS' export of
	    `RAT4_TESTSUITE_NO_REEXEC_WITH_CONFIG_SHELL=yes', and simplify both
	    $(TEST_LOG_COMPILER) and $(AM_TEST_LOG_FLAGS)

2009-11-13  Stefano Lattarini  <stefano.lattarini@gmail.com>

	testlib.sh: bugfix in `_cleanup_at_exit()'

	M: tests/TestsAux/testlib.sh:
	  * `_clenup_at_exit()': call `set +x' early, so that even when the
	    script terminates without call to _Exit (e.g. a failed command
	    uncatched) there are no problems with the calls to `_testcase_msg'
	    (which expectes shell traces to be turned off)

2009-11-13  Stefano Lattarini  <stefano.lattarini@gmail.com>

	testsuite definitions moved out from testlib.sh

	D: tests/TestsAux/test-lib.in:
	A: tests/TestsAux/testlib.sh:
	  * moved, and ...
	  * ... removed definitions, settings and functions specific to Ratfor
	    Testsuite: it's now mostly a general-purpose "testing library" to
	    be used when writing test cases in form of shell scripts

	A: tests/TestsAux/rat4-t.in:
	  * new file, contains definitions and settings specific for the Ratfor
	    Testsuite, and includes both `testlib.sh' and `rat4-testlib.sh'

	A: tests/TestsAux/rat4-testlib.sh:
	  * new file, contains definition of subroutines specific for the
	    Ratfor Testsuite, and includes `testlib.sh' and `rat4-t.sh'

	M: tests/*.test:
	M: tests/SanityChecks/*.test:
	  * updated accordingly: include `rat4-t.sh' rather than `test-lib.sh'

	M: configure.ac:
	  * call to AC_CONFIG_FILES updated accordingly: removed `test-lib.in',
	    added `rat4-t.in'

	M: tests/TestsAux/Makefile.am:
	  * added `rat4-t.sh' to $(nodist_check_DATA)
	  * added `rat4-testlib.sh' and `testlib.sh' to $(dist_check_DATA)
	  * removed definition of $(check_DATA)
	  * to be explicit, use `$(nodist_check_SCRIPTS)', not simply
	    `$(check_SCRIPTS)'

	M: tests/.gitignore:
	  * updated accordingly

2009-11-13  Stefano Lattarini  <stefano.lattarini@gmail.com>

	defs.sh renamed as test-lib.sh

	D: tests/TestsAux/defs.in:
	A: tests/TestsAux/test-lib.in:
	  * renamed

	M: tests/*.test:
	M: tests/SanityChecks/*.test:
	  * updated accordingly

	M: configure.ac:
	  * call to AC_CONFIG_FILES updated accordingly

	M: tests/TestsAux/Makefile.am:
	  * defn of $(check_DATA) updated acccordingly

	M: tests/.gitignore:
	  * updated accordingly

2009-11-13  Stefano Lattarini  <stefano.lattarini@gmail.com>

	defs.in: function rm_rf(): accept more than 1 arguments

	M: tests/TestsAux/defs.in:
	  * rm_rf(): accept more than one argument

2009-11-13  Stefano Lattarini  <stefano.lattarini@gmail.com>

	defs.in: improved verbose messages to user

	M: tests/TestsAux/defs.in:
	  * _clenup_at_exit(): in verbose messages: if a test has exit status
	    77, do not say that it failed, but rather that it was skipped

2009-11-13  Stefano Lattarini  <stefano.lattarini@gmail.com>

	BUGFIX: `{set +x;} 2>/dev/null' broke heirloom-sh

	M: tests/TestsAux/defs.in:
	  * Apparently, a construct like `{ set +x; } 2>/dev/null' get the
	    `set +x' executed in a subshell by Heirloom Sh (and so myabe also
	    by Solaris Sh), and this is contrary to our usage.  Fix this.

	M: NEWS:
	  * updated accordingly, citing the bug and our fix

2009-11-11  Stefano Lattarini  <stefano.lattarini@gmail.com>

	work around zsh resetting `$0' in scripts sourced with the `.' builtin

	M: README:
	  * (Section "Supported shells"): When describing the manual workaround
	    about the Zsh incompatibility w.r.t the handling of the special
	    variable `$0' in sourved scripts, tell that it is now needed only
	    with Zsh3.

	M: tests/TestsAux/defs.in:
	  * For Zsh4, work around the incompatibility in the way Zsh deal
	    with the special variable `$0' in sourced scripts (the workaround
	    uses the Zsh special variable `$functrace').
		For Zsh 3, abort the script if the option `FUNCTION_ARGZERO' is
		on.

	M: NEWS:
	  * updated accordingly

2009-11-13  Stefano Lattarini  <stefano.lattarini@gmail.com>

	maint.mk: autoreconf is called with `-vi' by default

	M: maint/maint.mk:
	  * updated with latest version from SteLib, which, when defining
	    `$(_autoreconf)', uses as its default value (used when the
	    `AUTORECONF' environment variable is not set) `autoreconf -vi'
	    rather than simply `autoreconf'

2009-11-13  Stefano Lattarini  <stefano.lattarini@gmail.com>

	removed useless file `maint/remake.mk'

	D: maint/remake.mk:
	  * removed: it was a cruft file left from an older version of SteLib
	    maint.mk-releated stuff

2009-11-12  Stefano Lattarini  <stefano.lattarini@gmail.com>

	version bumped to 1.0f

	M: NEWS:
	  * version bumped to 1.0f

2009-11-12  Stefano Lattarini  <stefano.lattarini@gmail.com>

	HACKING: added info about how to make a release

	M: HACKING:
	  * new section "Making a release"

2009-11-11  Stefano Lattarini  <stefano.lattarini@gmail.com>

	version of package depends on SHA1 of git commit

	A: build-aux/git-version-gen:
	  * new file, imported verbatim from gnulib; caclulate a suitable
	    version string for the current git commit (i.e. commit pointed
	    to by HEAD)

	M: configure.ac:
	  * calculate version for AC_INIT on-the-fly (at autoconf time) with
	    `git-version-gen'

	M: Makefile.am:
	  * added rules/hooks for distributing the file `.tarball-version' in
	    dist tarballs
	  * other minor related and unrelated improvements and reorganization
	    in file layout and comments

	M: maint/release.mk:
	  * updated with a new version from SteLib, which corrected the
	    releasing process to account for version strings auto-generated
	    from Git commit's SHA1 (decreased automation, but extended checks)

2009-11-11  Stefano Lattarini  <stefano.lattarini@gmail.com>

	NEWS: fixed typo

	M: NEWS:
	  * fixed typo: s/rather the/rather than/

2009-11-11  Stefano Lattarini  <stefano.lattarini@gmail.com>

	defs.in: testcase_PASS(): tightened implementation

	M: tests/TestsAux/defs.in
	  * testcase_PASS(): as this function is epxected to be called at most
	    once in a testcase, and only if no failure was found previously,
	    just make it an alias to `testcase_DONE' (avoiding to make it call
	    also `testcase_RESET_SUCCESS' before)

2009-11-10  Stefano Lattarini  <stefano.lattarini@gmail.com>

	BUGFIX: defs.in: testcase_DONE(): $testcase_outcome

	M: tests/TestsAux/defs.in:
	  * testcase_DONE(): if called with `$testcase_outcome' unset, set it
	    to `$SUCCESS', as that's the default outcome of a testcase

2009-11-09  Stefano Lattarini  <stefano.lattarini@gmail.com>

	refactoring: defs.in: new `_testcase_msg()' internal function

	M: tests/TestsAux/defs.in:
	  * _testcase_msg(): new function
	  * _testcase_process_outcome(), _cleanup_at_exit(), testcase_DONE():
	     use `_testcase_msg()' to write verbose messages, instead of
	     hand-written and hard-wired `echo' statements
	  * _Exit(), _cleanup_at_exit(): be more quiet w.r.t. shell traces;
	    user messages improved accordingly; other minor related changes

2009-11-09  Stefano Lattarini  <stefano.lattarini@gmail.com>

	refactoring: defs.in: renamed internal function `cleanup_at_exit()'

	M: tests/TestsAux/defs.in:
	  * function `cleanup_at_exit()' renamed as `_cleanup_at_exit()'
	  * explicitly tell that `_cleanup_at_exit()' is an internal function

2009-11-09  Stefano Lattarini  <stefano.lattarini@gmail.com>

	refactoring: improve consistency in verbose messages (defs.in)

	M: tests/TestsAux/defs.in:
	  * cleanup_at_exit(): format of verbose messages issued here is now
	    similar to the format of those issued in `_testcase_process_outcome()'
	    -- something like "*** TEST-NAME: MESSAGE" being written to stderr

2009-11-09  Stefano Lattarini  <stefano.lattarini@gmail.com>

	refactoring: defs.in: better names for global vars

	M: tests/TestsAux/defs.in:
	  * global variables renamed:
	     - s/rat4_exit_default/testcase_exit_default/
	     - s/rat4_exit_status/testcase_exit_status/
	     - s/rat4_exit_signal/testcase_exit_signal/

2009-11-09  Stefano Lattarini  <stefano.lattarini@gmail.com>

	refactoring: defs.in: make Exit() an internal function

	M: tests/TestsAux/defs.in:
	  * `Exit()' renamed as `_Exit()', and explicitly described as an internal
	    function

2009-11-09  Stefano Lattarini  <stefano.lattarini@gmail.com>

	fix HACKING w.r.t. how to register outcome of test scripts

	M: HACKING:
	  * tell to use `testcase_REGISTER_FAILURE()', `testcase_FATAL_FAILURE()'
	    and `testcase_DONE()', not `testcase_PASS()' and `testcase_FAIL()'
	  * other (mostly) related improvements

2009-11-09  Stefano Lattarini  <stefano.lattarini@gmail.com>

	refactoring towards more atomic tests: new functions in defs.in

	M: tests/TestsAux/defs.in:
	  * testcase_REGISTER_FAILURE(): new function, register the outcome
	    of the testscase as failure, but does not abort the testscase
	    immediately
	  * testcase_RESET_SUCCESS(): new function, reset the outcome of the
	    testscase as a success, overriding any previously registered
	    failure
	  * testcase_FATAL_FAILURE(): new function, register the outcome of
	    the testscase as failure and stop the test script immediately
	  * testcase_DONE(): new function, report the outcome of the testsuite
	    and exit the script with a proper exit status
	  * new internal subroutine _testcase_process_outcome
	  * testcase_PASS(), testcase_FAIL(): marked as obsolete, and
	    reimplemented using new functions testcase_FATAL_FAILURE(),
	    testcase_RESET_SUCCESS() and testcase_DONE()

2009-11-09  Stefano Lattarini  <stefano.lattarini@gmail.com>

	refactoring: defs.in: some code moved around (mostly a cosmetic change)

	M: tests/TestsAux/defs.in:
	  * definitions of some subroutines and variables meant to be used only
	    in the client test scripts: moved later in the script

2009-11-09  Stefano Lattarini  <stefano.lattarini@gmail.com>

	defs.in: run_command(): bugfix in option parsing

	M: tests/TestsAux/defs.in:
	  * BUGFIX: in "case" statement processing current option: use `-*',
	    not `-?', as wildcard catching an invalid option

2009-11-09  Stefano Lattarini  <stefano.lattarini@gmail.com>

	HACKING: fix and extend discussion on `set -e' in test scripts

	M: HACKING:
	  * bugfix: tell that `set -e' is automatically enabled by defs.sh
	  * explain the recommended ways and rationales to use `set +e'

2009-11-09  Stefano Lattarini  <stefano.lattarini@gmail.com>

	fixed typo in HACKING

	M: HACKING:
	  * fixed two typos:
	     - s/fortran/Fortran/
	     - s/fotran/Fortran/

2009-11-06  Stefano Lattarini  <stefano.lattarini@gmail.com>

	comsetic fixes: removed extra white spaces

	M: README:
	M: tests/Makefile.am:
	M: tests/SanityChecks/Makefile.am:
	M: tests/SanityChecks/run_F77.test:
	M: tests/TestsAux/defs.in:
	M: tests/TestsAux/timer.in:
	M: tests/break-next-fail.data:
	M: tests/break_f77.test:
	M: tests/define-long-definition.test:
	M: tests/define-nested_f77.test:
	M: tests/define-stress_f77.test:
	M: tests/goto_f77.test:
	M: tests/if_f77.test:
	M: tests/ifelse-ambiguity_f77.test:
	M: tests/line-continuation_f77.test:
	M: tests/nested-loops_f77.test:
	M: tests/next_f77.test:
	M: tests/no-tabs.test:
	M: tests/repeat-until_f77.test:
	M: tests/return-a-value-from-subroutine-fail.test:
	M: tests/stmt-stack-stress_f77.test:
	M: tests/stress1_f77.test:
	M: tests/switch-fail.test:
	M: tests/synerr-basic.test:
	M: tests/while_f77.test:
	  * removed extra trailing white spaces
	  * removed white speces from empty line

2009-11-06  Stefano Lattarini  <stefano.lattarini@gmail.com>

	reflect the "Public Domain Ratfor" => "C Ratfor" renaming

	M: README:
	M: BUGS:
	  * modified to reflect the renaming of our main (and presently only)
	    client package (from "Public Domain Ratfor" to "C Ratfor")

2009-11-06  Stefano Lattarini  <stefano.lattarini@gmail.com>

	BUGS: removed description of an already fixed bug

	M: BUGS:
	  * removed the description of a bug already fixed many commits ago
	    (crash of some test scripts due to the combo "GNU C Library" +
	    "MirBSD Korn Shell")

2009-11-05  Stefano Lattarini  <stefano.lattarini@gmail.com>

	some tests renamed

	D: tests/keepcomment.test:
	A: tests/comments-keep.test:
	D: tests/keepcomment_f77.test:
	A: tests/comments-keep_f77.test:
	D: tests/comment.test:
	A: tests/comment-basic.test:
	  * tests renamed

	M: tests/Makefile.am:
	  * $(ALL_TESTS) updated accordingly

2009-11-05  Stefano Lattarini  <stefano.lattarini@gmail.com>

	new test `forever2_f77.test'

	A: tests/forever2_f77.test:
	  * new test

	D: tests/forever_f77.test:
	A: tests/forever1_f77.test:
	  * test renamed

	M: tests/Makefile.am:
	  * $(ALL_TESTS) updated accordingly

2009-11-05  Stefano Lattarini  <stefano.lattarini@gmail.com>

	fixed tests for line continuation (and new tests related to those)

	A: tests/data-statement.test:
	A: tests/data-statement_f77.test:
	A: tests/common-block.test:
	A: tests/common-block_f77.test:
	A: tests/string-concatenation_f77.test:
	A: tests/exponentiation-operator_f77.test:
	  * new tests

	M: tests/line-continuation-automatic-operators.test:
	  * do not check anymore that `*' and `/' trigger automatic line
	    continuation; in fact, this behaviour proved to be a bug rather
	    than a feature (e.g. breaking data satements and common block
	    declarations)

	M: tests/Makefile.am:
	  * $(ALL_TESTS) updated accordingly

2009-11-05  Stefano Lattarini  <stefano.lattarini@gmail.com>

	strict-distcheck: use the same $(RATFOR) of `check' target

	M: maint/prj-post-cfg.mk:
	  * BUGFIX: $(strict_distcheck_configure_flags): added setting
	    RATFOR='$(RATFOR)', so that the same ratfor determined at
	    configure time is used also in strict-distcheck

2009-11-05  Stefano Lattarini  <stefano.lattarini@gmail.com>

	increase timeout limit of longer tests

	M: tests/long-infile.test:
	M: tests/long-infile_f77.test:
	  * since the input files might be really long, give a timeout of 180
	    seconds to ratfor, so that hopefully no spurious failure will crop
	    up on loaded or slow machines, or when the testsuite is executed in
	    lower priority

2009-11-05  Stefano Lattarini  <stefano.lattarini@gmail.com>

	tests extended (return keyword, subprograms a.k.a. functions/subroutines)

	A: tests/return-keyword-subroutine.test:
	A: tests/return-keyword-function-and-subroutine.test:
	A: tests/return-a-value-from-subroutine-fail.test:
	A: tests/return-keyword-outside-subprogram-fail.test:
	A: tests/return-keyword-stress_f77.test:
	A: tests/nested-subprogram-fail.test:
	A: tests/subprogram-name-invalid-not-repeated.test:
	A: tests/function-name-missing-1.test:
	A: tests/function-name-missing-2.test:
	A: tests/function-name-invalid-1.test:
	A: tests/function-name-invalid-2.test:
	A: tests/function-name-invalid-3.test:
	A: tests/subroutine-name-missing-1.test:
	A: tests/subroutine-name-missing-2.test:
	A: tests/subroutine-name-invalid-1.test:
	A: tests/subroutine-name-invalid-2.test:
	A: tests/subroutine-name-invalid-3.test:
	  * new tests

	D: tests/function-name-invalid.test:
	D: tests/function-name-missing.test:
	  * old test deleted (they have absorbed into new, stronger tests
	    `function-name-invalid-1.test' and `function-name-missing-1.test'

	M: tests/return-keyword-function-2.test:
	  * tests extended and improved

	A: tests/subprog-name-invalid.sh:
	  * new, auxiliary file used by the test scripts:
	   {subroutine,function}-name-invalid-{1,2,3}.test

	M: tests/Makefile.am:
	  * $(ALL_TESTS) updated accordingly to the new tests added
	  * added `subprog-name-invalid.sh' as prerequisite of test scripts
	    {subroutine,function}-name-invalid-{1,2,3}.test and
	    {subroutine,function}-name-missing-{1,2}.test

2009-11-04  Stefano Lattarini  <stefano.lattarini@gmail.com>

	stefano-lattarini.mk: typofix in comments

	M: maint/personal/stefano-lattarini.mk
	  * typofix in comments: s/reatfor/ratfor/

2009-11-01  Stefano Lattarini  <stefano.lattarini@gmail.com>

	renamed testcase: rel-transl.test => translate-relationals.test

	D: tests/rel-transl.test:
	A: tests/translate-relationals.test:
	  * test renamed

	M: tests/Makefile.am:
	  * $(ALL_TESTS) updated accordingly

2009-10-31  Stefano Lattarini  <stefano.lattarini@gmail.com>

	improved `.gitignore' files

	A: tests/TestsAux/.gitignore
	  * new file

	M: tests/SanityCheck/.gitignore:
	  * removed `Makefile.in' and `Makefile': they are already listed in
	    the top-level .gitignore

	M: tests/.gitignore:
	  * removed `Makefile.in' and `Makefile': they are already listed in
	    the top-level .gitignore
	  * removed files in TestsAux/ dir: they are listed already in new
	    file `tests/TestsAux/.gitignore'

2009-10-31  Stefano Lattarini  <stefano.lattarini@gmail.com>

	Makefile.am: turned some comments from `#' to `##'

	M: tests/Makefile.am:
	M: tests/SanityChecks/Makefile.am:
	  * Some comments where reordered by automake, and put in wrong places
	    of output: this way, they became confusing rather than helpful. So
	    we rewrote tose as `##' comments, which are completely disrcatded
	    by automake.

2009-10-31  Stefano Lattarini  <stefano.lattarini@gmail.com>

	improved comment in makefile about $(AM_TEST_LOG_FLAGS)

	M: tests/TestsEnvironment.am:
	  * Fixed the comment telling why we add the exporting of the variable
	    RAT4_TESTSUITE_NO_REEXEC_WITH_CONFIG_SHELL='yes' in the environment
	    (with `$(AM_TEST_LOG_FLAGS)'). The previous rationale was basically
	    obsoleted (it spoke about efficieny reasons, but the improvement
	    in time produced by that export is ridicously low) and wrong (it
	    missed the point by not telling that withoit such an export the
	    user wouldn't be able to override at make time the shell used by
	    the test scripts).

2009-10-31  Stefano Lattarini  <stefano.lattarini@gmail.com>

	tests/CheckTestsList.am: improved message to user

	M: files/CheckTestsList.am:
	  * updated with latest version from SteLib; now, the message echoed
	    to the user in target `check-list-of-tests' ("checking consistency
	    of list of tests...") also cite the directory for which the check
	    is being done

2009-10-31  Stefano Lattarini  <stefano.lattarini@gmail.com>

	refactor testsuite: run sanity checks first

	D: tests/000sanity-run_F77.test:
	A: tests/SanityChecks/run_F77.test:
	A: tests/000sanity-run_RATFOR.test:
	D: tests/SanityChecks/run_RATFOR.test:
	A: tests/000sanity-run_command.test:
	D: tests/SanityChecks/run_command.test:
	A: tests/000sanity-timer-cc.test:
	D: tests/SanityChecks/timer-cc.test:
	A: tests/000sanity-timer.test:
	D: tests/SanityChecks/timer.test.
	  * sanity checks moved in a subdirectory, so that:
	      1. they are assured to be run before the test scripts, even when
	         make is run with the `-j' option
	      2. if any sanity check fail, the real testsuite is not run (its
	         outcome would not be reliable anyway)
	  * inclusion of `defs.sh' modified accordingly to account for the
	    changed directory

	A: tests/SanityChecks/.gitignore:
	  * new file

	A: tests/SanityChecks/Makefile.am:
	  * new file: makefile to run the sanity check on the Ratfor Testsuite

	A: tests/LocalCleanup.am:
	  * new makefile fragment, shared between `tests/Makefile.am' and
	    `tests/SanityChecks/Makefile.am': contain targets to remove
	    temporary files/directories left by the testsuite

	A: tests/TestsEnvironment.am:
	  * new makefile fragment, shared between `tests/Makefile.am' and
	    `tests/Sanity/ChecksMakefile.am':

	M: tests/Makefile.am:
	  * added `SanityChecks' to $(SUBDIRS) (after `TestsAux')
	  * include `LocalCleanup.am' and `TestsEnvironment.am'; remove targets
	    and definitions which are taken care of by these files

	M: configure.ac:
	  * add `tests/SanityChecks/Makefile' to AC_CONFIG_FILES

2009-10-31  Stefano Lattarini  <stefano.lattarini@gmail.com>

	tinyfix: make a test script executable

	M: tests/balanced-parens.test:
	  * set executable bit on (this setting was forgotten for unknonw
	    reasons when the file was first added to git repo)

2009-10-31  Stefano Lattarini  <stefano.lattarini@gmail.com>

	defs.in: comments: fixed spacing after full stops

	M: tests/TestsAux/defs.in:
	  * fixed spacing after full stops in comments, so that every full stop
	    is now followed by two white spaces

2009-10-31  Stefano Lattarini  <stefano.lattarini@gmail.com>

	refactoring testsuite: new subroutine `run_RATFOR'

	M: tests/TestsAux/defs.in:
	  * new subroutine, run the ratfor interpreter to be testted with
	    "bells ans whistles" (in particular, it suitable the timer script
	    so that the testsuite won't hang even of some bug causes the
	    ratfor program to hang)

	M: tests/*.test:
	  * use run_RATFOR throughout
	  * other minor (mostly) related changes

	A: tests/000sanity-run_RATFOR.test:
	  * new file, sanity checks on the run_RATFOR function

	D: tests/000sanity-runF77.test:
	A: tests/000sanity-run_F77.test:
	  * renamed, for consistency

	M: tests/Makefile.am:
	  * $(ALL_TESTS) updated accordingly

	M: HACKING:
	  * tell how and why the shell function run_RATFOR should be used
	  * added a pointer to the documentation of run_F77, for better
	    consistency (since there is a pointer to the documentation of
	    run_RATFOR)

2009-10-31  Stefano Lattarini  <stefano.lattarini@gmail.com>

	bugfix in timer: don't clobber stdin of background command

	M: tests/TestsAux/timer.in:
	  * in shell function `background': explicitly redirect the stdin of
	    the command with `<&0', so that the shell keep the origina stdin
	    instead of redirecting it from /dev/null (as is usually done
	    automatically with background commanfs)

2009-10-30  Stefano Lattarini  <stefano.lattarini@gmail.com>

	defs.in: rename function: run_CMD => run_command

	M: tests/TestsAux/defs.in:
	  * shell function `run_CMD()' renamed as `run_command()'

	M: tests/*.test:
	M: HACKING:
	  * updated accordingly

	D: tests/000sanity-runCMD.test:
	A: tests/000sanity-run_command.test:
	  * renamed accordingly

	M: tests/Makefile.am:
	  * $(ALL_TESTS) updated accordingly to the renaming

2009-10-30  Stefano Lattarini  <stefano.lattarini@gmail.com>

	defs.in: write a verbose message when re-executing with $CONFIG_SHELL

	M: tests/TestsAux/defs.in:
	  * issue a verbose message (like "TEST-NAME: reexecuting with SHELL")
	    when re-executing with $CONFIG_SHELL (this allows an easier
	    traceability of what is being really done with what shell)

2009-10-30  Stefano Lattarini  <stefano.lattarini@gmail.com>

	defs.in: renamed sentinel variable for re-excution

	M: tests/TestsAux/defs.in:
	  * sentinel variable used to decide wheter re-excute the test scripts
	    with $CONFIG_SHELL has been renamed:
	     - from: RAT4_TESTSUITE_RUNNING_WITH_CONFIG_SHELL
	     + to: RAT4_TESTSUITE_NO_REEXEC_WITH_CONFIG_SHELL

	M: tests/Makefile.am:
	  * definition of `$(AM_TEST_LOG_FLAGS)' updated accordingly: export
	   `RAT4_TESTSUITE_NO_REEXEC_WITH_CONFIG_SHELL=yes', not
	   `RAT4_TESTSUITE_RUNNING_WITH_CONFIG_SHELL=yes'

2009-10-30  Stefano Lattarini  <stefano.lattarini@gmail.com>

	tests on non-alnum chars in defined names: $ _ .

	A: tests/define-no-dot-in-symbolic-name.test:
	  * check that a symbolic parameter name won't come to contain a dot
	    `.' character

	A: tests/define-dollar-in-symbolic-name.test:
	  * check that a symbolic parameter name can contain (and even begin
	    with, and even *be*) a dollar `$' character

	M: tests/define-underscore.test:
	A: tests/define-underscore-in-symbolic-name.test:
	  * renamed, and fixed bugs preventing it to work
	  * check that a symbolic parameter name can contain (and even begin
	    with, and even *be*) an undercore `_' character

	M: tests/define-fail.test:
	  * check that a proper erro message is produced when trying to define
	    a symbolic parameter name which contains a dot
	  * added a few new checks
	  * now run as many tests as possible before FAILing, to give better
	    feedback and diagnostic

	M: tests/Makefile.am:
	  * $(ALL_TESTS) updated accordingly

2009-10-29  Stefano Lattarini  <stefano.lattarini@gmail.com>

	improved tests on automatic line continuation

	D: tests/line-continuation-automatic.test:
	  * removed, splitted in these two...

	A: tests/line-continuation-automatic-operators.test:
	A: tests/line-continuation-automatic-relationals.test:
	  * ... new test scripts
	  * tests tightened w.r.t. occourence of white spaces
	  * removed useless call to `ls' program

	A: tests/line-continuation-automatic-relationals-raw.test:
	  * new test, check if line continuation is triggered also by raw
	    `.and.', `.neq' etc. relational operators

	A: tests/line-continuation-automatic-others.test:
	  * new test, check if line continuation is triggered also commas
	    and unbalanced left parentheses

	M: tests/Makefile.am:
	  * $(ALL_TESTS) updated accordingly

2009-10-29  Stefano Lattarini  <stefano.lattarini@gmail.com>

	new test on simple variable assignements

	A: tests/simple-assignement.test:
	  * new test

	M: test/Makefile.am:
	  * $(ALL_TESTS) updated accordingly

2009-10-29  Stefano Lattarini  <stefano.lattarini@gmail.com>

	added timer to tests which can hang (for bugs in ratfor)

	M: tests/verbatim.test:
	  * use `timer' for calls to $RATFOR, so that the test script does not
	    hang undefinitely even in case of strange ratfor bugs (these
	    undefinite hangings already happened in practice)

2009-10-29  Stefano Lattarini  <stefano.lattarini@gmail.com>

	RAT4_TESTSUITE_XFAIL_TESTS: bugfix in its initialization (in configure)

	M: configure.ac:
	  * bugfix in initialization of `$RAT4_TESTSUITE_XFAIL_TESTS' (list of
	    tests to be SKIP'd whenn runnning `make check'): be sure to always
	    register the full name of a test, comprising the `.test' suffix,
	    even if the user specified only the basename of the test
	  * refactoring: define and use a new shell function `rat4_var_append'

	M: NEWS:
	  * updated accordingly

2009-10-29  Stefano Lattarini  <stefano.lattarini@gmail.com>

	new test `balanced-parens.test'

	A: tests/balanced-parens.test:
	  * new test, checking that ratfor does not give spurious errors about
	    "unbalanced parentheses"

	M: tests/Makefile.am:
	  * $(ALL_TESTS) updated accordingly

2009-10-28  Stefano Lattarini  <stefano.lattarini@gmail.com>

	nitpick in description of a testcase

	M: tests/return-keyword-function-2.test:
	  * brief heading description of the testcase sligthy improved and made
	    more specific

2009-10-28  Stefano Lattarini  <stefano.lattarini@gmail.com>

	testsuite: defs.in: run_CMD rewritten (heavy refactoring)

	M: tests/TestsAux/defs.in:
	  * subroutine `run_CMD()' rewritten:
	    + removed redundant option `-c'
	    + the COMMAND given to run *must* be an external command (it can't be
	      a shell function or shell builtin anymore)
	    + work around a bug in FreeBSD /bin/sh (with an explicative comment)
	    + removed printing of mostly useless verbose messages, e.g.:
	       - "entering run_CMD(): become quiet"
	       - "leaving run_CMD()"
	    + do not use "=== stdout" etc. delimiters when displaying stdout and/or
	      stderr of the command just run; rather use the xtracing messages of
	      correspoding `cat stdout' etc. commands, for consistency with the
	      rest of the testsuite
	    + internal variables are named simply as e.g. `run_foo', not as e.g.
	      `_run_foo'
	  * subroutine `run_F77()': do not use the `-c' option of run_CMD anymore
	    (one-liner change)

	M: tests/000sanity-runCMD.test:
	  * updated accordingly: do not pass anymore shell functions or builtins
	    to run_CMD: rather use a proper shell script created on-the-fly
	  * added tests on `-e IGNORE' options of run_CMD
	  * tiny refactoring: define and use a simple shell fuction `test_cleanup'
	    to remove files which shouldn't exists before the run of a test,
	    instead of always removing them by hand
	  * other minor nitpicks and fixings

2009-10-28  Stefano Lattarini  <stefano.lattarini@gmail.com>

	testsuite: defs.in: refactoring in run_F77

	M: tests/TestsAux/defs.in:
	  * run_F77(): internal variables are named simply as  e.g. `run77_foo',
	    not as e.g. `_run77_foo':
	  * removed printing of mostly useless verbose messages:
	     - "entering run_F77(): become quiet"
	     - "jumping from run_F77() to run_CMD"

2009-10-28  Stefano Lattarini  <stefano.lattarini@gmail.com>

	testsuite: defs.in: removing cruft from run_CMD

	M: tests/TestsAux/defs.in:
	  * run_CMD(), run_F77(): revemod redundant option `-i'

	M: tests/synerr-stdin.test:
	  * use `run_CMD ... <file' rather than `run_CMD -i file ...'

	M: tests/usage-option-missing-argument.test:
	  * use `run_CMD ... <file' rather than `run_CMD -i file ...'
	  * heading comment slighty improved

2009-10-28  Stefano Lattarini  <stefano.lattarini@gmail.com>

	improved/extended tests on the `return' keyword

	D: tests/return.test:
	A: tests/return-keyword-function-1.test:
	  * renamed
	  * slight improvements (in readability)

	D: tests/return_f77.test:
	A: tests/return-keyword-function_f77.test:
	  * renamed
	  * heading comment slighty improved

	A: tests/return-keyword-function-2.test:
	A: tests/return-keyword-subroutine_f77.test:
	  * new tests

	M: tests/function-return.test:
	M: tests/function-return_f77.test:
	  * expiclitly tell in heading comments that these tests might be
	    superseded by the `return-keyword-...' tests, but that we won't
	    remove them anyway

	M: tests/Makefile.am:
	  * $(ALL_TESTS) updated accordingly

2009-10-28  Stefano Lattarini  <stefano.lattarini@gmail.com>

	improved tests on non-alphanumeric tokens in ratfor

	A: tests/non-alpha-tokens-2.test
	  * new test: check that the tokens `//' and `**' are preserved

	D: tests/non-alpha-tokens.test:
	A: tests/non-alpha-tokens-1.test:
	  * renamed

	M: tests/Makefile.am:
	  * $(ALL_TESTS) updated accordingly

2009-10-28  Stefano Lattarini  <stefano.lattarini@gmail.com>

	typofix in defs.in

	M: tests/TestsAux/defs.in:
	  * typofix in comment: use uppercase at beginning of a sentence

2009-10-27  Stefano Lattarini  <stefano.lattarini@gmail.com>

	clean for configure tmpfiles: import from stelib

	A: MostlyCleanConfigureTmp.am:
	  * new file, imported from SteLib; contains the definition of the
	    `mostlyclean-tmp' target, used to clean temporary files erroneously
	    left behind by configure and/or config.status when run with Zsh 3.

	M: Makefile.am:
	  * do not define the target `mostlyclean-local': it's defined (with
	    the new name `mostlyclean-configure-tmp', and with some semantic
	    changes) in new file `MostlyCleanConfigureTmp.am'
	  * include `MostlyCleanConfigureTmp.am'
	  * declare target `mostlyclean-local' as dependent from target
	    `mostlyclean-configure-tmp'

2009-10-26  Stefano Lattarini  <stefano.lattarini@gmail.com>

	updated maint.mk, and related simplifications

	M: maint/maint.mk:
	  * updated to latest version on SteLib, which introduces the general
	    utility macro `$(normalize-boolean)'

	M: maint/personal/lattarini-stefano.mk:
	  * use `$(normalize-boolean)' instead of defining and use ad-hoc macro
	    `$(normalize-huge-strictdistcheck-sh-code)'
	  * other cosmetic changes

2009-10-26  Stefano Lattarini  <stefano.lattarini@gmail.com>

	don't override install/uninstall make targets anymore

	M: Makefile.am:
	  * do not override the various install/uninstall targets anymore with
	    warning messages telling that such targets are no-op: this is mostly
	    pointless, require us to disable `-Woverride' automake warning, and
	    moreover looks wrong when ratfor-testsuite is used as a subpackage of
	    another package (which is the common usage pattern), as in that case
	    the `distcheck' target ends up generating useless warning messages
	    when in fact things are going perfectly OK

	M: configure.ac:
	  * in AM_INIT_AUTOMAKE: don't pass the `-Wno-override' option anymore

2009-10-26  Stefano Lattarini  <stefano.lattarini@gmail.com>

	configure.ac: cosmetic fixes (indentation)

	M: configure.ac:
	  * fixed indentation in macro calls ans shell code: consistently use
	    two spaces (not sometimes two, sometimes three, sometimes four)

2009-10-26  Stefano Lattarini  <stefano.lattarini@gmail.com>

	improved messages in configure w.r.t. xfail tests

	M: configure.ac:
	  * improved messages about the test scripts expected to fail: do no use:
	     "testcase ... will be skipped"
	    but rather
	     "testcase ... will be expected to fail"

2009-10-26  Stefano Lattarini  <stefano.lattarini@gmail.com>

	cosmetic improvements in Makefile.am

	M: Makefile.am:
	  * cosmetic improvements in the definition of variables $(EXTRA_DIST)
	    and $(no_dist_files)

2009-10-25  Stefano Lattarini  <stefano.lattarini@gmail.com>

	typofixes in NEWS

	M: NEWS:
	  * typofix: s/possbility/possibility/
	  * typofix: s/could causes/could cause/
	  * typofix: added forgotten extra space after fullstop

2009-10-25  Stefano Lattarini  <stefano.lattarini@gmail.com>

	developers' personal *.mk files more easily integrated

	A: maint/developer.mk:
	  * new file (from SteLib), which ought to include an extension *.mk
	    specific to a single developer

	M: maint/maint.mk:
	  * updated from Stelib, so that it includes also the file
	    `maint/developer.mk'

	A: maint/personal/stefano-lattarini.mk:
	  * new file, extension specific to developer `Stefano Lattarini'

	D: maint/local-cfg-mk.samples:
	  * deleted, no more needed

	M: Makefile.am:
	  * removed `maint/local-cfg-mk.samples' from $(EXTRA_DIST)
	  * added `maint/developer.mk' to $(EXTRA_DIST)
	  * added `maint/personal/*' to $(no_dist_files)

2009-10-25  Stefano Lattarini  <stefano.lattarini@gmail.com>

	test scripts: fixes for FreeBSD nawk

	M: tests/stmt-stack-stress_f77.test:
	  * in awk script creating test input (and related code): since FreeBSD's
	    nawk is quite fussy about real newlines in strings' initialization,
	    use `\n' throughout.

2009-10-24  Stefano Lattarini  <stefano.lattarini@gmail.com>

	required autoconf version lowered: 2.64 => 2.62

	M: configure.ac:
	  * AC_INIT: required autoconf version is now 2.62, not 2.64

	M: HACKING:
	  * adjusted requirements about autotools' version

2009-10-24  Stefano Lattarini  <stefano.lattarini@gmail.com>

	don't enable silent-rules by default

	M: configure.ac:
	  * in call to `AM_SILENT_RULES': don't enable silent rules by default

	M: NEWS:
	  * updated accordinbgly

2009-10-22  Stefano Lattarini  <stefano.lattarini@gmail.com>

	new tests, plus cosmetic fixes

	A: tests/include-nonalpha.test:
	A: tests/line-continuation-automatic.test.
	A: tests/line-continuation-in-string.test:
	A: tests/switch-non-positive-values_f77.test:
	A: tests/for-with-empty-clauses_f77.test:
	  * new tests

	M: tests/switch_f77.test:
	  * fixed typo in comments: s/swittch/switch/

	M: tests/for_f77.test:
	  * improved test description
	  * removed the parts testing `for' with empty clauses: that tests
	    are now done in `for-with-empty-clauses_f77.test'

	M: tests/line-continuation-basic.test
	  * removed some tests: they have been extended and moved in new test
	    script `line-continuation-in-string.test'

	M: tests/Makefile.am:
	  * $(ALL_TESTS) updated accordingly

2009-10-22  Stefano Lattarini  <stefano.lattarini@gmail.com>

	maint/config.site: do not deal with `-Werror' cflag (minor bugfix)

	M: maint/config.site:
	  * bugfix: do not set variable `enable_werror_cflag' anymore, as we don't
	    have to compile any C source, and thus don't have to enable `-Werror'
	    compiler flag, not even for maintainers

2009-10-22  Stefano Lattarini  <stefano.lattarini@gmail.com>

	maint/config.site: enable silent rules by default

	M: maint/config.site:
	  * enable `silent-rules' option by default, by setting variale
	    `enable_werror_cflag' to "yes"

2009-10-22  Stefano Lattarini  <stefano.lattarini@gmail.com>

	maint/config.site: do not override user choice

	M: maint/config.site:
	  * do not unconditionally set variables which should be overridable
	    by command line switches of configure; e.g. don't use:
	     - enable_foo=yes
	    but use rather:
	     + enable_foo=${enable_foo-yes}

2009-10-20  Stefano Lattarini  <stefano.lattarini@gmail.com>

	new test: non-alpha-tokens.test

	A: tests/non-alpha-tokens.test:
	  * New test script.  Check that ratfor behaves well with non-alphanumeric
	    tokens. This is meant to prevent regression w.r.t. already corrected
	    bugs.

	M: Makefile.am:
	  * $(ALL_TESTS): updated accordingly

2009-10-20  Stefano Lattarini  <stefano.lattarini@gmail.com>

	do not automatically generate list of test scripts

	OK, let's face it: the automatic generation of the list of tests was
	stupid, complicated, and WRONG.  The list of test scripts should be
	have been regenerated whenever a test script was added in the `tests/'
	directory, but in truth THERE IS NO EASY NATURAL WAY FOR MAKE TO
	AUTOMATICALLY DISCOVER THIS ADDITION.  And we didn't divise and code
	an hack to accompish this.  So, when a test script was addded, the
	list was not updated -- in fact, nothing was updated, and nothing
	happened.  D'OH!

	So let's revert to the old behaviour of explicitly writing the list of
	tests, and checking it through a comparison with the list of `*.test'
	files contentained in the `tests/' directory.  It is simpler, more
	solid, and it *works* (and it can nicely reuse code from SteLib, too).

	A: tests/CheckTestsList.am:
	  * added from SteLib

	M: tests/Makefile.am:
	  * re-inserted hard-wired definition of $(ALL_TESTS)
	  * do not include `TestsList.am' anymore
	  * include `CheckTestsList.am'
	  * removed references to `TestsList.am or `gen-tests-list.sh', and
	    any rule linked to them

	D: build-aux/gen-tests-list.sh:
	D: bootstrap.sh:
	  * removed: no more needed

	M: HACKING:
	  * adjusted accordingly: do not refer to bootstrap.sh anymore

	M: .gitignore:
	  * removed references to `tests/TestLisat.am'

2009-10-19  Stefano Lattarini  <stefano.lattarini@gmail.com>

	version bumped to 0.9e

	M: configure.ac:
	  * version in AC_INIT bumped: 0.9d => 0.9e
	  * removed `TODO' item about wrapping some code in an m4 macro: it's not
	    that useful, and would probaly introduce only some more complexity.

	M: NEWS:
	  * cite version 0.9e as latest version

2009-10-19  Stefano Lattarini  <stefano.lattarini@gmail.com>

	tmpfiles left by zsh3: cleaned by `mostlyclean' rather than by `distclean'

	M: Makefile.am:
	  * target `distclean-local' renamed as `mostlyclean-local'

2009-10-19  Stefano Lattarini  <stefano.lattarini@gmail.com>

	avoid spurious warns in target clean-local-testdirs

	M: tests/Makefile.am:
	  * improved the `clean-local-testsdirs' target: avoid spurious warnings
	    if there are no `*.dir' directories left

2009-10-19  Stefano Lattarini  <stefano.lattarini@gmail.com>

	improving location of auxiliary testsuite files

	D: tests/halt.in:
	A: tests/TestsAux/halt.in:
	  * moved
	  * added customary `@configure_input@' line

	D: bin-aux/timer.sh:
	A: tests/TestsAux/timer.in:
	  * moved
	  * added customary `@configure_input@' line

	D: bin-aux/Makefile.am:
	D: bin-aux/.gitignore:
	  * files deleted: no more needed

	D: tests/defs.in:
	A: tests/TestsAux/defs.in:
	  * moved
	  * new variables `$testaux_srcdir' and `$testaux_builddir'
	  * adjusted definitions of `$srcdir' and `$builddir'
	  * definition of ${_run77_haltf} (absolute path of auxiliary source
	    file `halt.f') updated accordingly to the changed location of
	    `halt.in'
	  * now add `$testaux_srcdir' and `$testaux_builddir' rather than
	    `$top_srcdir/bin-aux' and `$top_builddir/bin-aux' to PATH

	M: tests/*.test:
	  * include `TestsAux/defs.sh' rather than `./defs.sh'

	M: Makefile.am:
	  * removed `bin-aux' from $(SUBDIRS)

	M: tests/Makefile.am:
	  * added `TestsAux' to $(SUBDIRS)

	A: tests/TestsAux/Makefile.am:
	  * new file, holding rules/defs to rebuild` timer', `defs.sh' and
	    `halt.f'

	M: configure.ac:
	  * call to `AC_CONFIG_FILES' updated accordingly w.r.t. `halt.f',
	    `defs.sh' and `timer'
	  * removed `bin-aux/Makefile' from `AC_CONFIG_FILES'
	  * added `tests/TestsAuxx/Makefile' to `AC_CONFIG_FILES'

	M: HACKING:
	  * in section "writing the test cases": tell to include
	    `./TestsAux/defs.sh', rather than simply `./defs.sh'
	  * do not speak of `defs.in' or `tests/defs.in', but rather use the
	    complete `tests/TestsAux/defs.in'
	  * other minor fixings and improvements

	M: tests/.gitignore:
	  * updated accordingly to the various renamings/movings

2009-10-19  Stefano Lattarini  <stefano.lattarini@gmail.com>

	typofix in comment

	M: tests/Makefile.am:
	  * typofix in comment: s/definitiond/definitions/

2009-10-19  Stefano Lattarini  <stefano.lattarini@gmail.com>

	better creation/control of distributed tarball

	M: Makefile.am:
	  * bugfix: $(EXTRA_DIST) extended with:
	     - maint/prj-post-cfg.mk
	     - maint/local-cfg-mk.samples
	     - bootstrap.sh
	  * New variable $(no_dist_files), holding a list of files which
	    must not be put in the distributed tarball.
	  * Added `dist-hook' target, checking that no file listed in
	    `$(no_dist_files)' is ever put in the distributed tarball.

2009-10-18  Stefano Lattarini  <stefano.lattarini@gmail.com>

	use `maint/maint.mk', not `maint.mk'

	M: GNUmakefile:
	  * updated to latest version from Stelib, which includes `maint/maint.mk'
	    rather than simply `maint.mk'

	D: maint.mk:
	A: maint/maint.mk:
	  * moved

	M: Makefile.am:
	  * fixed content of $(DIST_FILES): list `maint/maint.mk', not `maint.mk'

2009-10-18  Stefano Lattarini  <stefano.lattarini@gmail.com>

	testsuite: work around a bug in mirbsd korn shell

	M: tests/next-fail.test:
	M: tests/break-fail.test:
	  * woraround a bug in the combo "mirbsd korn shell" + "glibc": use
	    `cat $FILE | awk ... >OUTFILE', not the simpler and better form
	    `awk <$FILE >OUTFILE', which triggers the bug.
	  * snaity checks slighty extended

	M: tests/integers-many-bases.test:
	M: tests/integers-many-bases_f77.test:
	  * improved comments about the workaround of "mksh"+"glibc" bug
	  * sanity checks made more verbose

	M: maint/local-cfg-mk.samples:
	  * section "stefano on bigio": keep `mksh' in $(strict_distcheck_shells)
	    by default, i.e. even when $(RAT4_HUGE_DISTCHECK) is false

2009-10-18  Stefano Lattarini  <stefano.lattarini@gmail.com>

	`distcheck' target now woks with CONFIG_SHELL=zsh3

	M: Makefile.am:
	  * added target `distclean-local': if ${SHELL} is zsh3, clean temporary
	    files erronously left behind by config.status

2009-10-17  Stefano Lattarini  <stefano.lattarini@gmail.com>

	bugfix: add empty `distcheck-hook' in Makefile.am

	M: Makefile.am:
	  * BUGFIX: added definition of empty `distcheck-hook' rule in Makefile.am,
	    so that it can be extended in e.g. strict-distcheck.mk

2009-10-17  Stefano Lattarini  <stefano.lattarini@gmail.com>

	testsuite: work around a bug in mirbsd korn shell

	M: tests/integers-many-bases.test:
	M: tests/integers-many-bases_f77.test:
	  * woraround a bug in the combo "mirbsd korn shell" + "glibc":
	    use `cat FILE | while read; do ...; done', not the simpler and
	    better foram `while read; do ...; done <FILE', which triggers
	    the bug.

	M: maint/local-cfg-mk.samples:
	  * for "stefano on bigio": re-added mksh to $(strict_distcheck_shells),
	    now that we have a workaround for its bug

	M: NEWS:
	  * updated accordingly

2009-10-17  Stefano Lattarini  <stefano.lattarini@gmail.com>

	version bumped to 0.9d

	M: configure.ac:
	  * version in AC_INIT bumped: 0.9c => 0.9d

	M: NEWS:
	  * mention version 0.9d

2009-10-17  Stefano Lattarini  <stefano.lattarini@gmail.com>

	bootstrap.sh: moved from `maint/' to top directory

	D: maint/bootstrap.sh:
	A: bootstrap.sh:
	  * moved

	M HACKING:
	  * updated accordingly

2009-10-17  Stefano Lattarini  <stefano.lattarini@gmail.com>

	bootstrap.sh: let the user avoid autoreconf call

	M: maint/bootstrap.sh:
	  * accept options `--no-autoreconf' (to skip the call to autoreconf) and
	    `--autoreconf' (to force the call to autoreconf)
	  * bailout on unrecognized options

2009-10-16  Stefano Lattarini  <stefano.lattarini@gmail.com>

	list of test scripts is now automatically generated

	D: tests/CheckTestsList.am:
	  * deleted, no more needed

	M: tests/Makefile.am:
	  * do not define $(ALL_TESTS) by hand anymore: instead added a rule to
	    generate the list of all test scripts at automake time
	  * do not include `CheckTestsList.am' anymore

	M: configure.ac:
	  * new variables `$build_aux' and `$abs_build_aux', holding relative
	    and absolute path of directory of build system's auxiliary files
	    (`build-aux/')
	  * added AC_SUBST of 'build_aux' and `abs_build_aux'

	A: build-aux/gen-tests-list.sh:
	  * new file, generate the list of tests

	A: maint/bootstrap.sh:
	  * new file: required now that we must dinamically generate the list of
	    tests

	M: HACKING:
	  * about bootstrapping process from checked-out sources: refer to
	    `maint/bootstrap.sh' script

	M: .gitignore:
	  * do not ignore the whole `build-aux' directory anymore
	  * added `build-aux/missing' and `build-aux/install-sh'
	  * added ` tests/TestsList.am'

2009-10-15  Stefano Lattarini  <stefano.lattarini@gmail.com>

	CheckTestsList.am is now taken from stelib

	M: tests/CheckTestsList.am:
	  * master copy of this file has been moved to SteLib: synced
	    from there

	M: tests/Makefile.am:
	  * related change: declare `check-local' as dependent from
	    `check-list-of-tests', as this dependency is no more
	    declared in `CheckTestsList.am'

2009-10-15  Stefano Lattarini  <stefano.lattarini@gmail.com>

	fixed heisenbug in timer.sh (in background shell)

	M: bin-aux/timer.sh:
	  * Previously, when the `timer' script was run on a machine under an
	    heavy load, the background shell process used as timer (defined in
	    `start_timer' subroutine) could end up trying to kill either the
	    main command or the sleep command *after it was already terminated*.
	    This resulted in the writing of spurious messages on stderr.  This
	    might seem harmless, but instead it ended up causing serious problems
	    when the stderr of the `timer' script was redirected to a file to be
	    later analized (which was the common usage pattern in our test
	    scripts).  The problem just explained has now been fixed, by making
	    the background shell avoid failing and complaining if the main command
	    or the sleep command already exited by themselves.

2009-10-14  Stefano Lattarini  <stefano.lattarini@gmail.com>

	work around F77 compilers with verbose `stop' builtin

	M: tests/*_f77.test:
	  * work around a bug in gfortran-4.0: use custom subroutine `halt'
	    instead of builtin `stop' in fortran/ratfor programs
	  * other minor (mostly related) changes

	M: configure.ac:
	  * added checks on `stop' Fortran builtin, trying to define a
	    suitable substitution if needed (using the new AC_SUBST'd
	    variable `RAT4_FORTRAN_STOP')
	  * added `tests/halt.f:tests/halt.in'.in to AC_CONFIG_FILES

	A: m4/rat4_fortran_stop_and_exit.m4
	  * new files: definition of macros to do checks on verbosity of
	    fortran `stop' builtin and `exit' subroutine

	A: tests/halt.in:
	  * new auxiliary file, containing definition of custom auxiliary
	    subroutine `halt' (the real subroutine definition is dependent
	    from a configure-time check)

	M: tests/defs.in:
	  * subroutine `run_F77' modified to always compile files togheter
	    with `halt.f' (which provides the custom `halt' subroutine)

	M: tests/.gitignore:
	  * added `halt.f'

	M: HACKING:
	  * updated accordingly, telling to use custom subroutine `halt'
	    instead of builtin `stop'

2009-10-08  Stefano Lattarini  <stefano.lattarini@gmail.com>

	minor cleanup in tests/.gitignore

	M: tests/.gitignore:
	  * removed `timer' (it has been moved to bin-aux various commits ago)

2009-10-08  Stefano Lattarini  <stefano.lattarini@gmail.com>

	require_fortran_compiler(): added a sanity check

	M: tests/defs.in:
	  * in subroutine `require_fortran_compiler()': check that $F77 is not
	    empty (it should never be empty with the semantics of configure
	    checks which has been introduced in previous checkins), die with
	    HARDERROR otherwise

2009-10-08  Stefano Lattarini  <stefano.lattarini@gmail.com>

	testsuite: improved/modularized sanity checks

	D: tests/003sanity.test:
	A: tests/000sanity_runF77.test:
	  * renamed with a better name

	D: tests/002sanity.test:
	A: tests/000sanity_timer_cc.test:
	  * renamed with a better name

	D: tests/001sanity.test:
	A: tests/000sanity_runCMD.test:
	A: tests/000sanity_timer.test:
	  * split in two files (seprating the tests on `run_CMD' from the tests
	    on `timer')
	  * also, tests on run_CMD extended

	M: tests/Makefile.am:
	  * $(ALL_TESTS) updated accordingly

2009-10-08  Stefano Lattarini  <stefano.lattarini@gmail.com>

	tests/defs.sh: extend and improve `run_F77'

	M: tests/defs.sh:
	  * subroutine run_F77 extended and improved, to make its use more
	    convenient and easy

	A: tests/003sanity.test:
	  * new test, checks on run_F77

	M: tests/*_f77.test:
	  * take advantage of the new run_F77 capabilities to simplify its usage
	    patterns

	M: HACKING:
	  * improved/updated discussion about run_F77

2009-10-07  Stefano Lattarini  <stefano.lattarini@gmail.com>

	in test cases: use `run_F77', not `run_CMD $F77'

	M: tests/defs.in:
	  * new subroutine `run_F77()', wrapper around `run_CMD $F77', and
	    introduced to facilitate any future workaround for bugs/limitations
	    in Fortran compilers
	  * subroutine `run_CMD()': now the COMMAND argument can also be specified
	    through the new option `-c'; this addition is meant to ease the writing
	    of wrappers around `run_CMD()' (such as the new `run_F77', which in
	    fact uses the new `-c' option)

	M: HACKING:
	  * updated accordingly, telling to use `run_F77' instead of `run_CMD $F77'

	M: tests/*_f77.test:
	  * use `run_F77', not `run_CMD $F77' (e.g. `run_F77 -- -o tst.exe tst.f'
	    instead of `run_CMD $F77 -o tst.exe tst.f')

2009-10-07  Stefano Lattarini  <stefano.lattarini@gmail.com>

	HACKING: tell about use `run_CMD'

	M: HACKING:
	  * In section "Writing Test Cases": tell to use `run_CMD' to run a program
	    which stdout/stderr are later to be analyzed.

2009-10-07  Stefano Lattarini  <stefano.lattarini@gmail.com>

	improved line wrapping in HACKING

	M: HACKING:
	  * improved line wrapping

2009-10-06  Stefano Lattarini  <stefano.lattarini@gmail.com>

	list of xfailing tests made settable at configure time

	M: configure.ac:
	  * new "precious" variable `RAT4_TESTSUITE_XFAIL_TESTS': list of testcases
	    expected to fail with your version of Ratfor (empty by default)

	M: tests/Makefile.am:
	  * $(XFAIL_TESTS) redefined to $(RAT4_TESTSUITE_XFAIL_TESTS) (which is
	    expected to be AC_SUBST'd by configure), instead that being hard-wired
	    to a c-ratfor specific value

	M: Makefile.am:
	  * added suitable definition of `RAT4_TESTSUITE_XFAIL_TESTS' to
	    $(DISTCHECK_CONFIGURE_FLAGS)

	M: maint/prj-post-cfg.mk:
	  * added suitable definition of `RAT4_TESTSUITE_XFAIL_TESTS' to
	    $(strict_distcheck_configure_flags)

	M: README:
	  * updated accordingly (new section "Expected failures")

	M: NEWS:
	  * updated accordingly

2009-10-06  Stefano Lattarini  <stefano.lattarini@gmail.com>

	typofixes in README

	M: README:
	  * typo fixings:
	     - s/importatnly/importantly/
	     - s/my-ratfot/my-ratfor/

2009-10-06  Stefano Lattarini  <stefano.lattarini@gmail.com>

	.gitignore: removed idiosyncratic ignore-rules

	M: .gitignore:
	  * removed idiosyncratic or devloper-specific stuff (vim swap files,
	    typical names of files containing git commit messages, etc); this
	    stuff should now be included by individual developers in their
	    "global gitignore file" -- settable with:
	    `git config --global core.excludesfile GLOBAL-GITIGNORE-FILE'

2009-10-05  Stefano Lattarini  <stefano.lattarini@gmail.com>

	bumped version to 0.9b

	M: configure.ac:
	  * version in AC_INIT bumped: 0.9b => 0.9c

	M: NEWS:
	  * cite 0.9c as latest version

2009-10-05  Stefano Lattarini  <stefano.lattarini@gmail.com>

	bugfix in timer (job control too verbose for ksh)

	M: bin-aux/timer.sh:
	  * BUGFIX: in `stop_timer()' and `start_timer()': we use SIGQUIT (3), not
	    SIGTERM (15), to stop the background shell working as our timer. This
	    is done because some Korn shells display on stderr a message like:
	      "timer: line 242:  5986 Terminated ..."
	    when we terminate that background shell with SIGTERM, even if the shell
	    has in fact trapped the SIGTERM signal.  Weird bug.

	M: tests/001sanity.test:
	  * Use 10 seconds, not 20 seconds, as the timeout in calls to `timer':
	    the real reason of the intermittent failures we thought to have solved
	    using 20-sconds timeouts was due to the ksh bug explained above.

	M: NEWS:
	  * updated accordingly

2009-10-05  Stefano Lattarini  <stefano.lattarini@gmail.com>

	modularized/improved sanity checks

	D: tests/000sanity.check:
	A: tests/001sanity.check:
	  * renamed
	  * tests requiring a C compiler moved to new file tests/0002sanity.test
	  * timout for tests on `timer' script increased from 10 to 20, to minimize
	    the possibility of spurious failures on heavy-loaded systems

	A: tests/0002sanity.test:
	  * new file: sanity checks on the testsuite "framework" requiring a C
	    compiler

	M: tests/Makefile.am:
	  * $(ALL_TESTS) updated accordingly

2009-10-05  Stefano Lattarini  <stefano.lattarini@gmail.com>

	removed unneded use of config.h

	M: configure.ac:
	  * removed call to AC_CONFIG_HEADERS

	M: .gitignore:
	  * removed `config.h', `config.h.in' and `stamp-h1': no more needed

2009-10-04  Stefano Lattarini  <stefano.lattarini@gmail.com>

	bumped version to 0.9b

	M: configure.ac:
	  * version in AC_INIT bumped: 0.9a => 0.9b

	M: NEWS:
	  * cite 0.9b as latest version

2009-10-04  Stefano Lattarini  <stefano.lattarini@gmail.com>

	configure: checks on Fortran77 compled moved early

	M: configure.ac:
	  * Moved the check for the Fortran 77 compiled early, just after
	    the search for the Ratfor preprocessor.
	  * Removed useless/obsoleted comment "Checks for things needed by the
	    test suite" (cruft left from the days when this package was part of
	    Public Domain Ratfor).
	  * Other minor improvements to comments.

2009-10-04  Stefano Lattarini  <stefano.lattarini@gmail.com>

	strict-distcheck: removed use of C compilers

	M:  maint/prj-post-cfg.mk:
	  * removed addition of `--enable-werror-cflag' to
	    `$(strict_distcheck_configure_flags)': it was needed
	    only by C compilers, which we do not use anymore

	M: maint/local-cfg-mk.samples:
	  * in section for "stefano on bigio":
	     - removed redifition of `$(strict_distcheck_c_compilers)'

	M: maint/strict-distcheck.mk:
	  * imported latest version from SteLib, which does not require or assume
	    the use of a C compiler anymore

2009-10-04  Stefano Lattarini  <stefano.lattarini@gmail.com>

	samples of local-cfg.mk: adapt to changes on bigio

	M: maint/local-cfg-mk.samples:
	  * in section for "stefano on bigio":
	     - removed gcc-3.3 (it has been uninstalled from bigio), use gcc-3.4
	       instead
	     - added newly installed compiler `/opt/vintage/bin/gfortran-4.0'
	       to the list of fortran 77 compilers used by strict-distcheck
	       (only when `$(RAT4_HUGE_DISTCHECK)' is set to a "true" value)
	     - added newly installed compiler `/opt/vintage/bin/gcc-4.0' to
	       the  list of C compilers used by strict-distcheck (only when
	       `$(RAT4_HUGE_DISTCHECK)' is set to a "true" value)

2009-10-04  Stefano Lattarini  <stefano.lattarini@gmail.com>

	now configue checks that Fortran77 compiler works

	So, for the intricacies of autoconf, the removal of the macro `AC_PROG_CC'
	from configure.ac had the side effect of making the macro `AC_PROG_F77'
	emit shell code checking that the fortran compiler can produce working
	executables.

	This check was not done before (I have no idea why), and unfortunately it
	breaks the recommended way of disabling the use of the fortran compiler
	in the testsuite -- i.e. passing F77=NONE to the configure script.

	On the other hand, these new checks done on the selected fortran compiler
	are quite useful, and we want to keep them enabled.

	So we simply disable the call to AC_PROG_F77 if the $F77 variable is set
	to NONE.

	M: m4/ratfor_prog_f77.m4:
	  * in `RAT4_PROG_F77': do not look for and check the Fortran 77 compiler
	    (i.e. do not call `AC_PROG_F77') if $F77 is set to "NONE".

	M: NEWS:
	  * tell that configure now check that the fortran compiler found (or
	    specified by the user) works as expected (in particular, can create
	    simple executables)

	M: configure.ac:
	  * moved the checks for ratfor after the inclusion of the file
	    `maint/config.site'

2009-10-02  Stefano Lattarini  <stefano.lattarini@gmail.com>

	bugfix in script `timer'

	M: bin-aux/timer.sh:
	  * BUGFIX: nasty bufg causing intermittent failures: in start_timer():
	    in shell code passed to $CONFIG_SHELL: ensure that $sleep_pid is
	    always set before trying to kill the associated process

2009-10-02  Stefano Lattarini  <stefano.lattarini@gmail.com>

	make GNUmakefile available also in VPATH builds

	M: configure.ac:
	  * un-commented call to AC_CONFIG_LINKS for GNUmakefile, so that it is
	    now avaiable also in VPATH builds

	M: Makefile.am:
	  * BUGFIX: added HACKING, GNUmakefile, maint.mk and maint/*.mk
	    to $(EXTRA_DIST)

2009-10-02  Stefano Lattarini  <stefano.lattarini@gmail.com>

	use shell scripts, not C bins, as auxiliary progs

	D: bin-aux/timer.c:
	A: bin-aux/timer.sh:
	  * rewritten as a shell script

	M: bin-aux/.gitignore:
	M: bin-aux/Makefile.am:
	  * updated accordingly

	M: configure.ac:
	  * removed all bits about checkings for C compiler, headers and library
	    functions (*big* simplification)
	  * added `bin-aux/timer.sh' to AC_CONFIG_FILES

	M: tests/defs.in:
	  * removed definition of $CC and $CFLAGS

	M: tests/000-sanity.test:
	  * do not require anymore a C compiler (but use it if avaiable, to do
	    more thorough tests)
	  * added some tests on the behaviour of `timer'
	  * modified some tests on the behaviour of `timer'

	D: m4/ax_check_cc_flag.m4:
	  * no more needed: removed

	M: HACKING:
	  * removed section "Writing auxiliary C programs"

	M: NEWS:
	  * updated accordingly

2009-10-02  Stefano Lattarini  <stefano.lattarini@gmail.com>

	importing local autoconf macros from SteLib

	D: m4/rat4_arg_enable.m4:
	A: m4/ax_arg_enable.m4:
	D: m4/rat4_check_cc_flag.m4:
	A: m4/ax_check_cc_flag.m4:
	D: m4/rat4_include_maint_config_site.m4:
	A: m4/ax_misc_include_maint_config_site.m4:
	D: m4/rat4_prog_doff_u.m4:
	A: m4/ax_prog_diff_u.m4:
	  * removed old files
	  * new versions fetched from SteLib

	A: m4/ax_misc_report_if_beta.m4:
	  * new file from SteLib

	M: configure.ac:
	  * updated accordingly, to reflect some macros/variables
	    renaming
	  * added proper calls to `m4_pattern_forbid' to catch unexpanded
	    `AX_*' or `_AX_*' macros
	  * added call to AX_REPORT_IF_BETA

2009-10-01  Stefano Lattarini  <stefano.lattarini@gmail.com>

	added importin og GNUmakefile and maint make rules

	A: GNUmakfile:
	A: maint.mk:
	A: maint/release.mk:
	A: maint/strict-distcheck.mk:
	  * new files, imported from SteLib

	A: maint/prj-post-cfg.mk:
	  * new file, read by maint.mk (required to have the `strict-distcheck'
	    target working properly)

	M: configure.ac
	  * added new command line option `--enable-maintainer-make-rules'
	  * added new automake conditional `ENABLE_MAINTAINER_MAKE_RULES'

	M: Makefile.am
	  * define the make variable `$(ENABLE_MAINTAINER_MAKE_RULES)' properly
	    (used by `maint.mk'), depending on the value of the new automake
	    conditional `ENABLE_MAINTAINER_MAKE_RULES'

	M: NEWS:
	  * updated accordingly (SteLib and --enable-maintainer-rules)

	M: HACKING:
	   * new section "Configuring and Building":
	      + speak in some details about configure options:
	         --enable-werror-cflag
	         --enable-maintainer-make-rules
	      + tell to use GNU make
	      + tell about the `maint/config.site' file

2009-10-01  Stefano Lattarini  <stefano.lattarini@gmail.com>

	nitpick w.r.t. blank spaces

	M: README:
	M: HACKING:
	  * removed extra white spaces from empty ines

2009-10-01  Stefano Lattarini  <stefano.lattarini@gmail.com>

	updated rotting maint/local-cfg-mk.samples

	M: maint/local-cfg-mk.samples:
	  * synced with the corresponding file of Public Domain Ratfor (aka
	    c-ratfor), since the requirements for `strict-distcheck' in the
	    this and that projects are pretty similar, and the main (and only
	    insofar unique) developement environment for both projects is the
	    same ("stefano on bigio")

2009-10-01  Stefano Lattarini  <stefano.lattarini@gmail.com>

	delete useless file maint/gcc-2.95-wrapper.bash

	D: maint/gcc-2.95-wrapper.bash:
	  * deleted

2009-10-01  Stefano Lattarini  <stefano.lattarini@gmail.com>

	tinyfix in configure.ac (m4_pattern_forbid)

	M: configure.ac:
	  * fixed usage of `m4_pattern_forbid' for local autoconf macros:
	    from:
	      - m4_pattern_forbid([^_?RAT4_])
	    (which din't worked as expected) to:
	      + m4_pattern_forbid([^_RAT4_])
	      + m4_pattern_forbid([^RAT4_])

2009-10-01  Stefano Lattarini  <stefano.lattarini@gmail.com>

	grammar fix in comment

	M: configure.ac:
	  * grammar fix in comment

2009-10-01  Stefano Lattarini  <stefano.lattarini@gmail.com>

	fixed wording in BUGS

	M: BUGS:
	  * fix wrong/misleading wording: s/already tailored/mostly tailored/

2009-10-01  Stefano Lattarini  <stefano.lattarini@gmail.com>

	typofix in BUGS

	M: BUGS:
	  * typofix: s/scripts causes/scripts cause/

2009-10-01  Stefano Lattarini  <stefano.lattarini@gmail.com>

	small fixes/improvements in doc

	M: README:
	  * tell that `make check' build all the auxiliary programs/scripts
	    required by the testsuite.
	  * wording fix: s/this searche/these searches/
	  * typofix: s/wasy/way/

	M: HACKING:
	  * removed section "Configuring and building" (which consisted only
	    of a "TODO", anyway): it does not belong to the HACKING file, and
	    the configuration process is already covered in details in the
	    README file.

2009-09-29  Stefano Lattarini  <stefano.lattarini@gmail.com>

	tiny fix in HACKING

	M: HACKING:
	  * reflect the moving of auxiliary binaries/programs in `bin/aux':
	      s|timer.c|bin-aux/timer.c|

2009-09-29  Stefano Lattarini  <stefano.lattarini@gmail.com>

	"all" target no more rebuild check progs & scripts

	M: tests/Makefile.am:
	  * do not create a symlink to ../bin-aux/timer anymore: it is no more
	    needed with the improved definition of $PATH in `tests/defs.in' as
	    done in a previous checkin
	  * do not support the rebuilding of outdated stuff in `bin-aux/' from
	    here; if you need to do so, just do `make check' from the top-level
	    directory
	  * removed no more needed target `clean-local-timer'

2009-09-29  Stefano Lattarini  <stefano.lattarini@gmail.com>

	"all" target no more rebuild check progs & scripts

	M: bin-aux/Makefile.am:
	  * target `all-local' no more depends on $(check_PROGRAMS)

	M: tests/Makefile.am:
	  * target `all-local' no more depends on $(check_PROGRAMS) and
	    $(check_SCRIPTS)

2009-09-29  Stefano Lattarini  <stefano.lattarini@gmail.com>

	improve PATH defn in tests/defs.in

	D: src-aux:
	A: bin-aux:
	  * renamed

	M: Makefile.am:
	M: configure.ac:
	  * modified accordingly to the `src-aux => bin-aux' renaming

	M: tests/Makefile.am:
	  * modified accordingly to the `src-aux => bin-aux' renaming
	  * do not export `$(srcdir)' anymore: it is already AC_SUBST'd in
	    `tests/defs.in'
	  * do not export `RAT4_TESTSUITE_BYPASS_SANITY_CHECKS=yes' anymore:
	    `tests/defs.in' do fewer and lighter sanity checks, which should not
	    be skipped

	M: tests/defs.in:
	  * added definition of:
	     - ${builddir}
	     - ${srcdir}
	     - ${top_builddir}
	     - ${top_srcdir}
	    (similar to same-named vars in the customary automake-generated
	     Makefile, but always containing absolute paths)
	  * new subroutine `must_be_directory()'
	  * disabled sanity checks become mostly useless or trivial, added new
	    (simple & fast) sanity checks
	  * removed now useless variable `$testrootdir'
	  * extend PATH with ${top_builddir}/aux-bin and ${top_srcdir}/aux-bin
	  * related simplifications & improvements

2009-09-29  Stefano Lattarini  <stefano.lattarini@gmail.com>

	auxiliry C binaries moved in aux-src

	D: timer.c:
	A: src-aux/timer.c:
	  * moved

	A: src-aux/Makefile.am:
	  * new file

	M: tests/Makefile.am:
	  * updated accordingly

	M: configure.ac:
	  * added `src-aux/Makefile' to AC_CONFIG_FILES

	M: Makefile.am:
	  * added aux-src to $(SUBDIRS)

	A: src-aux/.gitignore:
	  * new file

	M: .gitignore:
	  * updated appropriatly

2009-09-29  Stefano Lattarini  <stefano.lattarini@gmail.com>

	add C++ support

	M: INSTALL:
	  * add proper call to AH_TOP to define macros useful for C++ support:
	    define macros:
	     - C_DECL
	     - BEGIN_C_DECLS
	     - END_C_DECLS

	M: timer.c:
	  * add `DECL_C' attribute to `main()', to have proper linkage with
	    C++ compilers

2009-09-29  Stefano Lattarini  <stefano.lattarini@gmail.com>

	list new bug: problems with mirbsd korn shell

	M: BUGS:
	  * report possible crashes of some test scripts with the MirBSD Korn Shell
	    on GNU/Linux

2009-09-29  Stefano Lattarini  <stefano.lattarini@gmail.com>

	separating README, adding HACKING and BUGS

	D: INSTALL:
	  * removed, no more needed (its content has been moved in the `README')

	M: README:
	  * reduced, some content (~ half) moved out to new file `HACKING'
	  * content kept has been reordered, improved and extended

	A: BUGS:
	A: HACKING:
	  * new files

	M: NEWS:
	  * updated accordingly

2009-09-29  Stefano Lattarini  <stefano.lattarini@gmail.com>

	version 0.9a

	M: NEWS:
	  * added reference to 0.9a version

2009-09-29  Stefano Lattarini  <stefano.lattarini@gmail.com>

	HUGE: new pkg ratfor-testsuite from old pkg ratfor

	D: README:
	D: NEWS:
	D: COPYING:
	D: HACKING:
	D: BUGS:
	D: m4/rat4_include_maint_config_site.m4:
	D: Makefile.am:
	D: configure.ac:
	D: maint.mk:
	D: GNUmakefile:
	D: src/:
	D: doc/:
	  * removed, no more needed (they were pertinent to "Public Domain Ratfor"
	    package only)

	D: blackbox-tests/README:
	A: README:
	D: blackbox-tests/timer.c:
	A: timer.c:
	D: blackbox-tests/Makefile.am:
	A: Makefile.am:
	D: blackbox-tests/tests/:
	A: tests/:
	  * moved into top-level directory

	D: blackbox-tests/configure.ac:
	A: configure.ac:
	  * moved into top-level directory
	  * version downgraded: 0.9b => 0.9a

	D: blackbox-tests/NEWS:
	A: NEWS:
	  * moved into top-level directory
	  * fixed appropriately

	M: INSTALL:
	  * just tell that the "Ratfor Testsuite" is not meant to be installed.

	M: .gitignore:
	  * updated appropriately

2009-09-28  Stefano Lattarini  <stefano.lattarini@gmail.com>

	version bumped: 1.0j => 1.0k

	M: blackbox-tests/README:
	  * removed extra white spaces

	M: configure.ac:
	  * version in AC_INIT bumped: 1.0j => 1.0k

	M: NEWS:
	  * refer to the latest version as `1.0k'

2009-09-28  Stefano Lattarini  <stefano.lattarini@gmail.com>

	updated blackbox-tests/README

	M: blackbox-tests/README:
	  * Updated to reflect the fact that `blackbox-tests' is now a subpakcage.
	  * Tell about how configure looks for ratfor, and how to override this
	    check using the `RAFOR' precious variable
	  * BUGFIX: do not refer anymore to the now unused `RAT4_TESTSUITE_F77'
	    configure's precious variable: refer to the `F77' variable instead.
	  * Do not tell anymore how to fix a bug in ratfor: this is not a problem
	    for this package anymore. Such an information should be provided by
	    e.g. the HACKING file of the ratfor distribution.

	M: configure.ac:
	  * tiny fixes in comments:
	     - s|tests/configure.ac|blackbox-tests/configure.ac|
	     - s|tests/configure|blackbox-tests/configure|
	  * minor rewordings in comments

2009-09-28  Stefano Lattarini  <stefano.lattarini@gmail.com>

	in C code: s/NFILES/INCLUDE_MAX_DEPTH/

	M: src/init.c:
	M: src/tokenizer.c:
	M: src/rat4-global.h:
	M:src/rat4-common.h:
	  * #defined constant `NFILES' renamed to `MAX_INCLUSION_DEPTH'

2009-09-28  Stefano Lattarini  <stefano.lattarini@gmail.com>

	package name: "ratfor" => "Public Domain Ratfor"

	M: configure.ac:
	  * in AC_INIT: use `Public Domain Ratfor', not `ratfor', as package name

	M: src/main.c:
	  * in `main()': when leaving `fingerprint' in the generated output: use
	  PACKAGE_STRING (defined in config.h) instead of hard-wired "Public
	  Domain Ratfor, version ..."

	M: .gitignore:
	  * updated accordingly: removed wildcards:
	      - ratfor-[0-9]*.tar.gz
	      - ratfor-[0-9]*/
	    added wildcards:
	      + public-domain-ratfor-[0-9]*.tar.gz
	      + public-domain-ratfor-[0-9]*/

2009-09-28  Stefano Lattarini  <stefano.lattarini@gmail.com>

	HACKING: describe how to make a release

	M: HACKING:
	  * Written section "Make a realease" (previously it consisted only of
	    a big "TODO")

2009-09-28  Stefano Lattarini  <stefano.lattarini@gmail.com>

	nitpick in Makefile.am comments

	M: Makefile.am:
	  * minor rewording in heading comment

2009-09-28  Stefano Lattarini  <stefano.lattarini@gmail.com>

	subdir `tests/' renamed as `blackbox-tests/'

	The subdirectory `tests' (containing the "Ratfor Testsuite" subpackage)
	contained in turn a subdirectory named `tests/' (containing the test
	scripts and their data files); this might cause confusion, so the
	top-level subdirectory `tests/' has been renamed as `blackbox-tests/'.

	D: tests/:
	A: blackbox-tests/:
	  * renamed

	M: Makefile.am:
	  * definition of `$(SUBDIRS)' updated accordingly

	M: configure.ac:
	  * call to `AC_CONFIG_SUBDIRS' updated accordingly

	M: HACKING:
	  * in the section "Testsuite"
	      - refer to `blackbox-tests/README', not to `tests/README'
	      - tell that we only do blackbox-testing, for the moment

	M: NEWS:
	  * updated accordingly

2009-09-28  Stefano Lattarini  <stefano.lattarini@gmail.com>

	moved test scripts in new subdir `tests/tests/'

	D: tests/*.test:
	A: tests/tests/*.test:
	D: tests/*.data:
	A: tests/tests/*.data:
	D: tests/CheckTestsList.am:
	A: tests/tests/CheckTestsList.am:
	D: tests/defs.in:
	A: tests/tests/defs.in:
	  * moved

	A: tests/tests/Makefile.am:
	  * new file, contains most of the rules/definitions that were in
	    `tests/Makefile.am'
	  * other related and necessary changes

	M: tests/Makefile.am:
	  * most content moved to `tests/tests/Makefile.am'
	  * added `tests' to $(SUBDIRS)
	  * other related changes

	M: tests/configure.ac:
	  * fixed sentinel file in AC_CONFIG_SRCDIR:
	      while_f77.test => tests/ifelse-ambiguity_f77.test
	  * version in AC_INIT bumped: 0.9a => 0.9b
	  * added `tests/Makefile' to AC_CONFIG_FILES
	  * in AC_CONFIG_FILES: `tests/defs.in' generates `tests/defs.sh' (no more
	    `defs.in' generates `defs.sh')

	A: tests/tests/.gitignore:
	  * new file

	M: tests/.gitignore:
	  * fixed appropriately

	M: NEWS:
	  * minor rewordings

2009-09-27  Stefano Lattarini  <stefano.lattarini@gmail.com>

	making testsuite a subpackage (.gitignore)

	M: tests/.gitignore:
	  * updated appropriately
	  * also added wildcard `*.log-t'

	M: .gitignore:
	  * removed `config.site'
	  * added `maint/config.site'
	  * improved wildcards for distdir and tarballs

2009-09-27  Stefano Lattarini  <stefano.lattarini@gmail.com>

	Making testsuite a subpackage

	The Ratfor Testsuite tree has been separated from the Public Domain
	Ratfor tree, and turned into an indipendent package, beginning a life
	of its own.

	M: tests/Makefile.am:
	  * modified heading comment (this no more the makefile of the `tests/'
	    subdir or `Public Domain Ratfor', but the top-level makefile of the
	    `Ratfor Testsuite' package)
	  * removed rules to rebuild & clean ratfor executable
	  * added proper definition of ACLOCAL_AMFLAGS

	M: configure.ac:
	  * removed configure checks for the ratfor testsuite (have been moved
	    to `tests/consigure.ac')
	  * removed options `color-tests' and `parallel-tests' from the call to
	    `AM_INIT_AUTOMAKE'
	  * removed `tests/Makefile' and `tests/defs.in' from `AC_CONFIG_FILES'
	  * added call to `AC_CONFIG_SUBDIRS(tests)'

	A: tests/configure.ac:
	  * new file, contains configure checks for the ratfor testsuite
	  * also search for a ratfor executable

	M: tests/defs.in:
	  * simplified definition of $RATFOR (path/name of ratfor executable to
	    be tested), using the fact that it is AC_SUBST'd by `tests/configure'
	  * everywhere: uses `$F77' instead that `$RAT4_TESTSUITE_F77'

	D: m4/rat4_prog_diff_u.m4:
	A: tests/m4/rat4_prog_diff_u.m4:
	  * file moved

	D: m4/rat4_prog_f77_for_testsuite.m4:
	A: tests/m4/rat4_prog_f77.m4:
	  * file moved
	  * simply uses `$F77' instead that `$RAT4_TESTSUITE_F77'
	  * macro renamed from `RAT4_PROG_F77_FOR_TESTSUITE' to `RAT4_PROG_F77'
	  * serial number reset to `1'

	AS: tests/m4/rat4_arg_enable.m4:
	AS: tests/m4/rat4_check_cc_flag.m4:
	AS: tests/m4/rat4_include_maint_config_site.m4:
	  * new files, symlinks to correspondent files in top-level `m4/' directory

	A: m4/rat4_include_maint_config_site.m4:
	  * new file, contains definition of macro `RAT4_INCLUDE_MAINT_CONFIG_SITE'
	    which try to read in configure (with `.' builtin) the file
	    `maint/config.site', if it is present

	A: tests/maint/config.site:
	  * new file, just a copy from `maint/config.site'

	A: tests/NEWS:
	  * new file

	M: tests/README:
	  * added some TODO for required changes

	M: NEWS:
	  * updated appropriately

