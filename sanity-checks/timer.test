#!/bin/sh

# Testsuite sanity check: checks on the `timer' auxiliary program.

. ../lib/rat4-t.sh || exit 99

for i in 0 1 42; do
    (echo "#!/bin/sh"; echo "exit $i") > "exit$i"
    chmod a+x "exit$i"
    run_command -e $i -- timer -t 10 "./exit$i" || testcase_FATAL_FAILURE
    test ! -s stdout || testcase_FATAL_FAILURE
    test ! -s stderr || testcase_FATAL_FAILURE
done

# Check that timer ignore shell builtins.
mkdir tmp-bin
(echo "#!/bin/sh"; echo "echo YES >&2"; echo "exit 133") >tmp-bin/'echo'
chmod a+x tmp-bin/'echo'
oPATH=$PATH
PATH=`pwd`/tmp-bin:$oPATH; export PATH
run_command -e 133 -- timer -t 10 'echo' NO || testcase_FATAL_FAILURE
test -s stdout && testcase_FATAL_FAILURE
$FGREP YES stderr || testcase_FATAL_FAILURE
PATH=$oPATH; export PATH
unset oPATH

run_command -e 99 timer || testcase_FATAL_FAILURE
$FGREP 'missing argument' stderr || testcase_FATAL_FAILURE
run_command -e 99 timer -x || testcase_FATAL_FAILURE
$FGREP 'invalid option' stderr || testcase_FATAL_FAILURE
run_command -e 99 timer -t || testcase_FATAL_FAILURE
$FGREP 'option requires an argument' stderr || testcase_FATAL_FAILURE

ls -l none || :
test ! -f none
run_command -e 127 timer ./none || testcase_FATAL_FAILURE
$GREP './none: [nN]o such file or directory' stderr \
  || testcase_FATAL_FAILURE

: > noexec
chmod a-x noexec
ls -l noexec || :
test ! -x noexec
run_command -e 126 timer ./noexec || testcase_FATAL_FAILURE
$GREP './noexec: [pP]ermission denied' stderr || testcase_FATAL_FAILURE

testcase_PASS

# vim: ft=sh ts=4 sw=4 et
