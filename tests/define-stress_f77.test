#!/bin/sh

# Stress test for the `define' builting (done with the aid of f77)

. ../lib/rat4-t.sh || exit 99

require_fortran_compiler

cat > tst.r <<EOF
define LPAR (
define RPAR )
define SetTo =
define real integer
define LBRACK {
define RBRACK }
define NOT !
define STAR *
define COMMA ,
define IF if LPAR
define THEN RPAR LBRACK
define ELSE RBRACK else LBRACK
define ENDIF RBRACK
define PROGBEGIN program
define PROGEND end
define TRUE 1==1
define FALSE 1==0

PROGBEGIN stressdefine
  implicit none
  real x, y

  x = 1
define p1 { y =
define p2 2 }
  p1 p2

  IF TRUE THEN write(*,10); 10 format('MUUU'); ENDIF
  IF FALSE THEN write(*,20); 20 format('UMMM'); ENDIF

  IF NOT LPAR y != 2)
  THEN
    x SetTo 5
  ENDIF

  IF x == 5
  THEN
    write(STAR COMMA 100 RPAR x
  ELSE
    write(STAR,200) x
  ENDIF
  call halt

  100 format('OK:', I1)
  200 format('BAD:', I1)

PROGEND
EOF

(echo "MUUU"; echo "OK:5") >exp

cat tst.r

run_RATFOR tst.r || testcase_FATAL_FAILURE
mv stdout tst.f

run_F77 tst.f || testcase_FATAL_FAILURE

run_command ./tst.exe || testcase_FATAL_FAILURE
mv stdout got

cat exp
cat got

test -s stderr && testcase_FATAL_FAILURE

$DIFF_U exp got || testcase_FATAL_FAILURE

testcase_PASS

# vim: ft=sh ts=4 sw=4 et
