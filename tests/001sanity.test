#!/bin/sh

# Check that there are no obvious errors in the testing framework.

. ./defs.sh || exit 99


#
# Check the `run_CMD' function.
#

test_func() {
    cat <<EOF
OUT${1-}
EOF
    echo "ERR${1-}" >&2
}
run_CMD test_func 1 || testcase_FAIL
test -f stdout || testcase_FAIL
test -f stderr || testcase_FAIL
test x"`cat stdout`" = x"OUT1" || testcase_FAIL
test x"`cat stderr`" = x"ERR1" || testcase_FAIL

run_CMD -e 0 test_func 2 || testcase_FAIL
test -f stdout || testcase_FAIL
test -f stderr || testcase_FAIL
test x"`cat stdout`" = x"OUT2" || testcase_FAIL
test x"`cat stderr`" = x"ERR2" || testcase_FAIL

run_CMD -e 0 eval 'echo OUT3 && echo ERR3 >&2 && :' || testcase_FAIL
test -f stdout || testcase_FAIL
test -f stderr || testcase_FAIL
test x"`cat stdout`" = x"OUT3" || testcase_FAIL
test x"`cat stderr`" = x"ERR3" || testcase_FAIL


#
# Check the `timer' auxiliary program.
#

for i in 0 1 42; do
    (echo "#!/bin/sh"; echo "exit $i") > "exit$i"
    chmod a+x "exit$i"
    run_CMD -e $i -- timer -t 10 "./exit$i" || testcase_FAIL
    test ! -s stdout || testcase_FAIL
    test ! -s stderr || testcase_FAIL
done

# Check that timer ignore shell builtins.
mkdir tmp-bin
(echo "#!/bin/sh"; echo "echo YES >&2"; echo "exit 133") >tmp-bin/'echo'
chmod a+x tmp-bin/'echo'
oPATH=$PATH
PATH=`pwd`/tmp-bin:$oPATH; export PATH
run_CMD -e 133 -- timer -t 10 'echo' NO || testcase_FAIL
test -s stdout && testcase_FAIL
$FGREP YES stderr || testcase_FAIL
PATH=$oPATH; export PATH
unset oPATH

run_CMD -e 99 timer || testcase_FAIL
$FGREP 'missing argument' stderr || testcase_FAIL
run_CMD -e 99 timer -x || testcase_FAIL
$FGREP 'invalid option' stderr || testcase_FAIL
run_CMD -e 99 timer -t || testcase_FAIL
$FGREP 'option requires an argument' stderr || testcase_FAIL

ls -l none || :
test ! -f none
run_CMD -e 127 timer ./none || testcase_FAIL
$GREP './none: [nN]o such file or directory' stderr || testcase_FAIL

: > noexec
chmod a-x noexec
ls -l noexec || :
test ! -x noexec
run_CMD -e 126 timer ./noexec || testcase_FAIL
$GREP './noexec: [pP]ermission denied' stderr || testcase_FAIL

#
# Done.
#

testcase_PASS

# vim: ft=sh ts=4 sw=4 et
