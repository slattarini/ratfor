                           The Ratfor Testsuite


Brief Description
-----------------

  This package contains a set of blackbox testcases for the ratfor
  preprocessor.


Fortran 77 Compiler
-------------------

  Some tests require a Fortran 77 compiler.  If it is not present, they
  should be automatically skipped.

  By default, configure scans your system to found an available compiler,
  but this can be overridden by passing it a proper value for the variable
  `F77', as in:

    $ ./configure F77=/usr/local/gnu/bin/g77

  A special value of `NONE' for `F77' will explicitly tell configure that
  you don't have any available Fortran 77 compiler.  All the tests requiring
  such a compiler will be skipped.


Running all tests
-----------------

  The command:

    $ make check

  should run all the ratfor testcases, also building in advance any
  auxiliary script or binary required by the test scripts.

  The test cases are run in series by default.  You can use the `-jN'
  option of make for faster completion (roughly, this runs up to N test
  cases simultaneously, in parallel).  An example:

    $ make -j5 check


Interpretation
--------------

  Successes:
    PASS  - success
    XFAIL - expected failure

  Failures:
    FAIL  - failure
    XPASS - unexpected success

  Other:
    SKIP  - skipped tests (third party tools not available)


Getting details from failures
-----------------------------

  Each test is a shell script, and by default is run by $CONFIG_SHELL
  (which should be the best shell found at configure time).
  By default, verbose output of a test `foo.test' is retained in the log
  file `foo.log'.  A summary log is created in the file `test-suite.log'.

  In a non-VPATH build you can also run test scripts directly (with the
  current directory being necessarily the `tests/' subdirectory), they
  will be verbose and no log file will be written.

  You can limit the set of files using the TESTS variable, and enable
  detailed test output at the end of the test run with the VERBOSE
  variable:

    make VERBOSE=yes TESTS='first.test second.test ...' check

  The above command works only if you are in the `tests/' subdirectory;
  if you want to do something similar while in the top directory, you'll
  have to resort to e.g.

    env VERBOSE=yes TESTS='first.test second.test ...' make -e check

  But remember that `make -e' can be evil, since it could pull too many
  things in the makefile's namespace.  You've been warned.


Preserving temporary files
--------------------------

  By default, every test case `foo.test' create a temporary directory
  named `foo.dir', and remove it on sucessful termination.
  Use `keep_testdirs=yes' to keep test directories for successful tests
  also.


Reporting failures
------------------

  Send verbose output, i.e., the contents of test-suite.log, of failing
  tests to <stefano.lattarini@gmail.com>, along with the usual version
  numbers (which ratfor, which C compiler, which fortran compiler, which
  operating system, which make utility and version, which shell, etc.).
  Also report any other information which you think might be useful.


More Information about the Ratfor language
------------------------------------------

 The article by B.W. Kernighan, "RATFOR -- A Preprocessor for a Rational
 Fortran", is a good starting point, and is by far the best available
 brief description of the language.  A digital copy of the article can
 be downloaded from the URL:
   % http://www.mit.edu:8001/afs/athena.mit.edu/astaff/project/docsourc/doc/unix.manual.progsupp2/08.ratfor/ratfor.PS

 The classical book "Software Tools", by B.W. Kernighan and P. Plauger
 (Addison-Wesley, 1976) contains a lot of well-explained programs written
 in Ratfor.  The source code of these programs can be downloaded from
 the Kernighan' s web site:
  % http://cm.bell-labs.com/cm/cs/who/bwk/toolsbook/index.html

 An older public-domain C implementation of Ratfor is available at:
  % http://sepwww.stanford.edu/doku.php?id=sep:software:ratfor
 and a slighty-updated version derived from this one can be found at:
  % http://www.dgate.org/ratfor/
