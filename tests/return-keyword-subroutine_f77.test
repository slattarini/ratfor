#!/bin/sh

# Check that ratfor generate correct code for a `return' statement inside
# a subroutine (check done by compiling & running the generated code).

. ../lib/rat4-t.sh || exit 99

require_fortran_compiler

cat > tst.r <<EOF
integer function foo()
    foo = 5; return
end

subroutine bar
    integer foo
    write(*,10); 10 format('OK')
    write(*,20) foo(); 20 format(i1)
    return
    write(*,30); 30 format('BAD')
end

program testreturn
    write(*,100); 100 format('start')
    call bar
    write(*,200); 200 format('end')
    call halt
end
EOF

cat tst.r

cat > exp <<EOF
start
OK
5
end
EOF

run_RATFOR tst.r || testcase_FATAL_FAILURE
mv stdout tst.f
run_F77 tst.f || testcase_FATAL_FAILURE
run_command ./tst.exe || testcase_FATAL_FAILURE
test -s stderr && testcase_FATAL_FAILURE
mv stdout got

cat exp
cat got

$DIFF_U exp got || testcase_FATAL_FAILURE

testcase_DONE

# vim: ft=sh ts=4 sw=4 et
