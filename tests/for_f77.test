#!/bin/sh

# Test the `for' statement (by compiling and running the generated
# fortran code)

. ./defs.sh || exit 99

require_fortran_compiler

cat > tst.r <<EOF
program testfor
    implicit none
    integer x

    write(*,200)
    
    for(x = 0; x < 10; x = x + 2)
        write(*,100) x
    
    write(*,200)
    
    for (x = 10; x > 1; x = x - 2)
        write(*,100) x
    
    write(*,200)
    
    for(x = 3; x <= 24; x = x * 2) {
        write(*,100) x
    }
    
    write(*,200)
    
    x = 1
    for(; x < 5; x = x  + 1)
        write(*,100) x
    
    write(*,200)
    
    for(x = 3; x < 9;) {
        x = x + 2
        write(*,100) x
    }
    
    write(*,200)

100 format(I2)
200 format('---')
    stop
end
EOF

cat > exp <<EOF
---
0
2
4
6
8
---
10
8
6
4
2
---
3
6
12
24
---
1
2
3
4
---
5
7
9
---
EOF

cat tst.r

run_CMD "$RATFOR" tst.r || testcase_FAIL
mv stdout tst.f
run_F77 -- -o tst.exe tst.f || testcase_FAIL
run_CMD ./tst.exe || testcase_FAIL
ws_normalize <stdout >got

cat exp
cat got

test -s stderr && testcase_FAIL
$DIFF_U exp got || testcase_FAIL

testcase_PASS

# vim: ft=sh ts=4 sw=4 et
