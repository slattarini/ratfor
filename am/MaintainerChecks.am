## -*- Makefile.am -*-
##
## Maintainer-specific checks for the Ratfor Testsuite.
## This file should be included by the top-level Makefile.am.
##
## Copyright (C) 2010 Stefano Lattarini
## Written by Stefano Lattarini <stefano.lattarini@gmail.com>
##
## This program is free software: you can redistribute it and/or modify it
## under the terms of the GNU Lesser General Public License as published
## by the Free Software Foundation; either version 3 of the License, or
## (at your option) any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
## Lesser General Public License for more details.
##
## You should have received a copy of the GNU Lesser General Public License
## along with this program.  If not, see <http://www.gnu.org/licenses/>.
##

###########################################################################

# Internal macro to deal with silent-rules.
maintcheck__pre = @test x'$(AM_V_at)' != x'@' || echo " MAINTCHECK $@"

# List of directories where to recurse into for testing and related
# maintainer-checks.
test_subdirs = sanity-checks tests

# List of the targets doing maintainer-specific checks.
maintcheck_targets = ## will be updated later

# The target running all the maintainer-checks.
maintainer-check: $(maintcheck_targets)
.PHONY: maintainer-check $(maintcheck_targets)

###########################################################################

##
## Check that the list of tests given in the Makefile is equal to the
## list of all test scripts in the Automake testsuite.
##

maintcheck_targets += maintainer-check-list-of-tests

maintainer-check-list-of-tests:
	$(maintcheck__pre)
	$(AM_V_at)target='$@'; fail=''; \
	CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)"; \
	for subdir in $(test_subdirs); do \
	  echo "Making $$target in $$subdir"; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$target) || fail=yes; \
	done; \
	test -z "$$fail"

###########################################################################

##
## Check against known typos in the names of functions from our testing
## framework.
##

## helper internal macro
sc__typos_wrt_testing_framework_functions__pl = \
    use strict; \
    use warnings FATAL => "all"; \
    $$^W = 1; \
    my @ok = qw/FAIL SKIP HARDERROR DONE/; \
    my $$rx_ok = "(" . join("|", @ok) . ")"; \
    my @bad = (); \
    foreach my $$file (@ARGV) { \
        open(FILE, "<$$file") or die "$$file: cannot open: $$!\n"; \
        while (<FILE>) { \
            my @x1 = split /\b/; \
            my @x2 = grep { /^testcase_\w+$$/ } @x1; \
            my @x3 = grep { !/^testcase_$$rx_ok$$/ } @x2; \
            push @bad, map { "$$file:$$.: $$_" } @x3; \
        }; \
        close(FILE) or die "$$file: cannot close: $$!\n"; \
    }; \
    map { print STDERR "$$_ (suspicious token)\n" } @bad; \
    if (@bad) { \
        print STDERR "Valid testcase_xxx functions listed here:\n"; \
        map { print STDERR "  - testcase_$$_\n"; } @ok; \
        exit 1; \
    } else { \
        exit 0; \
    }

maintcheck_targets += sc--typos-wrt-testing-framework-functions

sc--typos-wrt-testing-framework-functions:
	$(maintcheck__pre)
	$(AM_V_at)files=`\
	   for d in $(test_subdirs); do \
	     for f in $$d/*.test $$d/*.sh; do \
	       test -f $$f && echo $$f; \
	     done; \
	   done; :`; \
	 perl -e '$(sc__typos_wrt_testing_framework_functions__pl)' $$files

###########################################################################

## vim: ft=automake noet sw=4 ts=4
