# configure.ac file for Ratfor Testsuite.
# Process this file with autoconf to produce a configure script.

m4_pattern_forbid([^_AX_])
m4_pattern_forbid([^AX_])
m4_pattern_forbid([^_RAT4_])
m4_pattern_forbid([^RAT4_])

# This apparently weird quote is needed to avoid that vim picks up
# and intepretes the following line as a vim modeline for this file.
m4_define([__vim_modeline__], [@%:@ v][im: ft=sh ts=8 sw=8 noet])

#
# Autoconf's initializations.
#

AC_PREREQ([2.64])
AC_INIT([Ratfor Testsuite], [0.9d], [stefano.lattarini@gmail.com])

AC_CONFIG_SRCDIR([tests/ifelse-ambiguity_f77.test])
AC_CONFIG_MACRO_DIR([m4])
AC_CONFIG_AUX_DIR([build-aux])
build_aux='${top_srcdir}/build-aux'
abs_build_aux='${abs_top_srcdir}/build-aux'
AC_SUBST([build_aux])
AC_SUBST([abs_build_aux])

#
# Maintainer-specific initializations and defaults.
#

AX_INCLUDE_MAINT_CONFIG_SITE

#
# Automake's initializations.
#

AM_INIT_AUTOMAKE([1.11 foreign -Wall -Werror -Wno-override color-tests
                       parallel-tests no-installinfo no-texinfo.tex])
AM_SILENT_RULES([yes]) # make `--enable-silent-rules' the default

#
# Option `--enable-maintainer-make-rules' tells that maintaner-specific
# rules should be imported in the GNUmakefile.
#

AX_ARG_ENABLE(
    [maintainer-make-rules],
    [Import maintaner-specific rules in the GNUmakefile. Use it only if
      you have GNU make, and you know what you are doing. Also, note that
      this option has *NOTHING* to do with the infamous automake's
      "maintainer-mode".],dnl '# font-lock
    [rat4_enable_maintainer_make_rules=yes],
    [rat4_enable_maintainer_make_rules=no])

m4_pattern_allow([ENABLE_MAINTAINER_MAKE_RULES])
AM_CONDITIONAL([ENABLE_MAINTAINER_MAKE_RULES],
               [test x"$rat4_enable_maintainer_make_rules" = x"yes"])

#
# Determine the list of tests to be skipped.
#

#TODO: wrap in a macro
m4_pattern_allow([RAT4_TESTSUITE_XFAIL_TESTS])
AC_ARG_VAR([RAT4_TESTSUITE_XFAIL_TESTS],
           [List of testcases expected to fail with your version of
            Ratfor (list is empty by default)])

for tst in $RAT4_TESTSUITE_XFAIL_TESTS; do
  AS_CASE([$tst], [*.test], [], [tst="$tst.test"])
  test -f "$srcdir/tests/$tst" || bad_tests=${bad_tests+"$bad_tests "}$tst
done
AS_UNSET([tst])

if test -n "$bad_tests"; then
    AC_MSG_ERROR([invalid xfail-tests specified:$bad_tests])
fi
AS_UNSET([badtests])

for tst in $RAT4_TESTSUITE_XFAIL_TESTS; do
  AS_CASE([$tst], [*.test], [], [tst="$tst.test"])
  AC_MSG_NOTICE([the testcase `$tst' will be skipped])
done
AS_UNSET([tst])

#
# Checks on programs.
#

# Check for a Ratfor preprocessor, to be used by the test scripts.
AC_PATH_PROGS([RATFOR], [ratfor ratfor77], [:])
if test x"$RATFOR" = x":"; then
  AC_MSG_ERROR([No ratfor program found])
fi
AC_ARG_VAR([RATFOR], [Ratfor preprocessor to be used by the testsuite])

# Get an available fortran compiler, to be used in testing.
RAT4_PROG_F77

if test x"$F77" != x"NONE"; then
    # Check that the binaries generated by the Fortran compiler are silent
    # when using the `stop' builtin, otherwhise try to define a proper
    # replacement for that builtin.
    RAT4_HAVE_SILENT_FORTRAN_STOP_BUILTIN
    RAT4_HAVE_SILENT_FORTRAN_EXIT_SUBROUTINE
    m4_pattern_allow([RAT4_FORTRAN_STOP])
    if test x"$rat4_cv_have_fortran_silent_stop_builtin" = x"yes"; then
        RAT4_FORTRAN_STOP=stop
    elif test x"$rat4_cv_have_fortran_exit_subroutine" = x"yes"; then
        RAT4_FORTRAN_STOP='call exit(0)'
    else
        AC_MSG_ERROR(m4_do(
            [your Fortran 77 compiler do not support statements ],
            [for making generated programs exit cleanly]))
    fi
    AC_SUBST([RAT4_FORTRAN_STOP])
fi

# Common utilities.
AC_PROG_GREP
AC_PROG_EGREP
AC_PROG_FGREP
AC_PROG_SED
AC_PROG_AWK
AC_PROG_LN_S

# Look for a diff command that can produce better human-readable output.
AX_PROG_DIFF_U

#
# Do output.
#

# Make GNUmakefile available also in VPATH builds.
AC_CONFIG_LINKS([GNUmakefile:GNUmakefile])

AC_CONFIG_FILES([Makefile bin-aux/Makefile tests/Makefile])

# Be sure to make the generated files readonly, to avoid that absent-minded
# developers modify them instead of the files they are generated from.
# It has already happened too many times.
AC_CONFIG_FILES([tests/defs.sh:tests/defs.in],
                [chmod a-w tests/defs.sh])
AC_CONFIG_FILES([tests/halt.f:tests/halt.in],
                [chmod a-w tests/halt.f])
AC_CONFIG_FILES([bin-aux/timer:bin-aux/timer.sh],
                [chmod a-w,a+x bin-aux/timer])

AC_OUTPUT

#
# Done.
#

AX_REPORT_IF_BETA
AS_EXIT(0)

__vim_modeline__
dnl*
dnl* vim: ft=config ts=4 sw=4 et
