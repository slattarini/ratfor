#!/bin/sh
# mklexer.sh: generate ratfor lexer.

set -e
progname=`echo "$0" | sed 's|.*/||'`

case $# in
    0);;
    *) echo "$0: FATAL: script takes no arguments" >&2; exit 2;;
esac

RAT4_KEYWORDS='
    break
    case
    default
    do
    else
    for
    if
    next
    repeat
    return
    switch
    until
    while
'

cat <<EOF
/*
 * DO NOT EDIT! GENERATED AUTOMATICALLY!
 * This file has been automatically generated by $progname.
 * Do not edit this file. Edit $0 instead.
 */
EOF

cat <<\EOF
#include "rat4-common.h"
#include "io.h"
#include "tokenizer.h"
#include "lexer.h"


/*
 *   L E X I C A L   A N A L Y S E R
 */


/*
 * lex - return lexical type of token, while writing it in lexstr[]
 *
 */
C_DECL int
lex(char lexstr[])
{
    int tok;

    do { /* skip empty lines, get next token, copy it in lexstr */
        tok = get_nonblank_token(lexstr, MAXTOK);
    } while (is_newline(tok));

    if (tok == EOF || is_stmt_ending(tok) || tok == LBRACE || tok == RBRACE)
        /* nothing to do */;
    else if (tok == DIGIT)
        tok = LEXDIGITS;
EOF

for kw in $RAT4_KEYWORDS; do
  bkw=`echo $kw | tr abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ`
  cat <<EOF
    else if (STREQ(lexstr, "$kw"))
        tok = LEX$bkw;
EOF
done

cat <<\EOF
    else
        tok = LEXOTHER;
    return(tok);
}
EOF

# avoid that vim erroneously take this as its modeline
echo '/* vi''m: set ft=c ts=4 sw=4 et : */'

# vim: ft=sh ts=4 sw=4 et
